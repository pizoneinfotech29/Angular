<div id="test_{{itemIndex}}" *ngIf="(parentEntity.layoutRollback.indexOf(constantsModelView.Layout_Horizontal_Grid_2) >= 0 ) || (parentEntity.layoutRollback.indexOf(constantsModelView.Layout_Horizontal_Grid) >= 0 || (parentEntity.layoutRollback.indexOf(constantsModelView.row_com) >= 0 && parentEntity.modelTableTypes == constantsModelView.sch_design) ) ? vProp.clientRecordId == record_id : true;" class="vert-col {{inEditMode ? 'setItem' : ''}}"  (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''"
    [ngStyle]="{'width' : (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? 'auto' : '180px','border-right':setViewPropertyBorder(vProp),'float': 'none'}">
    <form #viewPropertyRecursiveForm="ngForm" class="view-property-form " [ngClass]="{'blue-border': vProp.display == 'checked'}">
        <!--Edit Mode Region-->
        <!--action buttons-->
        <div class="item actions modelV" style="border-right: 1px solid #d2d3d3;" [ngStyle]="{'height': ((this.parentEntity['modelTableTypes'] == 'File' && (this.parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)' ))) ? '22px': !isCreate ? formViewShow ? '0px' : '0px' : '0px','border-right': (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? '1px solid #d2d3d3' : ''}" *ngIf="(!formViewShow &&  (((parentEntity.layout!='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !inEditMode) || ((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && inEditMode) || ((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && inEditMode ) || (parentEntity.layout=='Grid' && inEditMode )) && (vProp.viewProperties == null || vProp.viewProperties.length == 0) || (!formViewShow  && ((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File' || this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design' || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ?  vProp.showTrash : true )) )">
        <!-- <div class="item actions modelV" style="border-right: 1px solid #d2d3d3;" [ngStyle]="{'height': !isCreate ? formViewShow ? '0px' : '0px' : '0px','border-right': parentEntity.layout=='Row' ? '1px solid #d2d3d3' : '' }" *ngIf="(!formViewShow && inEditMode && (vProp.viewProperties == null || vProp.viewProperties.length == 0) || (!formViewShow  && ((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File' || this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design' || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ?  vProp.showTrash : true )) )"> -->
          <span class="fa fa-trash right glycolor 1" [ngClass]="{disabled:isDisabled(vProp)}" *ngIf="(((this.parentEntity['modelTableTypes'] == 'File' ?
          ((!vProp.id && this.parentEntity.type!='Multi Record (MRV)'&& this.parentEntity.type!='Multi Record (MRV) & Single Record (SRV)' && this.parentEntity.type!='Single Record (SRV)') ? true : false) : true ) &&  ((((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp.recordState =='Active' || vProp.recordState =='Active (Incomplete)' : true) && (this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
            || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' || this.parentEntity['modelTableTypes'] == 'Standard') ? (this.parentEntity.type=='Multi Record (MRV)' ? false : false) : true)
            && (!vProp.isRequired &&  parentEntity.type!==this.constantsModelView.ViewType_CreateView && parentEntity.type !== this.constantsModelView.ViewType_CreateViewAndSingleRecord
            && parentEntity.type !== this.constantsModelView.ViewType_CreateViewAndMrvSrvRecord) && (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)))) || (this.parentEntity['modelTableTypes'] == 'File'&& (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))  && (this.parentEntity.type=='Multi Record (MRV)' || this.parentEntity.type=='Single Record (SRV)' ) && constantsModelView.fileTypeTableCompColumn.indexOf(vProp.displayName) == -1))"
                (click)="!isDisabled(vProp) ? (!vProp.id ? removeViewProperty(vProp):setRecordLinedOut(vProp)):''" title="{{!vProp.id ? 'Remove property':'Soft Delete View Design'}}"></span>
        </div>

        <div class="item actions formV" [ngStyle]="{'height': !isCreate && !formViewShow ? '0px' : formViewShow ? '0px' : '0px' }" *ngIf="(formViewShow && ((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? ( isCreate && !vProp.id ? ((this.parentEntity.type=='Multi Record (MRV)' || this.parentEntity.type=='Single Record (SRV)') ? true : false) :true) : true ) ) && (((parentEntity.layout!='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !inEditMode) || ((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && inEditMode) || ((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && inEditMode )) && (vProp.viewProperties == null || vProp.viewProperties.length == 0)" >
            <span class="fa fa-trash glycolor right 2" [ngStyle]="{'margin-right': last ? '40px' : '30px'}" [ngClass]="{disabled:isDisabled(vProp)}" style="margin-right: 30px" *ngIf=" itemIndex != 0 && !vProp.isFormNameProperty && (((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))  ? vProp.recordState =='Active' || vProp.recordState =='Active Incomplete' : true)
            && (!vProp.isRequired &&  parentEntity.type!==this.constantsModelView.ViewType_CreateView && parentEntity.type !== this.constantsModelView.ViewType_CreateViewAndSingleRecord
            && parentEntity.type !== this.constantsModelView.ViewType_CreateViewAndMrvSrvRecord) && (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && (!vProp.isFormNameProperty && parentEntity.type!='Create (CV) & Single Record (SRV)'))"
                (click)="!isDisabled(vProp) ? (!vProp.id ? removeViewProperty(vProp):setRecordLinedOut(vProp)):''" title="{{!vProp.id ? 'Remove property':'Soft Delete View Design'}}"></span>
        </div>
        <!--/action buttons-->
        <ng-container *ngIf="vProp?.active  && inEditMode && (vProp.viewProperties == null || vProp.viewProperties.length == 0) && vProp.type !== constantsModelView.ViewPropertyType_Base">
            <!--item header -->
<!-- this dev is just to fix design -->
<div *ngIf=" (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !isCreate && !vProp.id && (this.parentEntity.type=='Multi Record (MRV)'  || this.parentEntity.type=='Single Record (SRV)') && formViewShow " ngDefaultControl name="test_p" style="display: inline-block;" [ngStyle]="{'height': this.parentEntity.type=='Multi Record (MRV)' ? '22px' : '0px' }"></div>
<!-- this dev is just to fix design -->
            <div class="item col-width  22" *ngIf="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !inEditMode" style="border-left: 0;background-color: #fff;"></div>
            <!-- For other table types -->
            <div  *ngIf="(formViewShow  ? ( isCreate ? true : false ) : true) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) &&  this.parentEntity['modelTableTypes'] != 'Standard (Single Active)'" ngDefaultControl name="test_0" style="display: inline-block;" [ngStyle]="{'height': (vProp.required=='No' || ((this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
              || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ? false : vProp.required=='Qualified')) && !isCreate && (this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) ? '20px' : (((this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)') && formViewShow) || ((this.parentEntity.type == 'Multi Record (MRV)' || (parentEntity['modelTableTypes'] == 'File' && parentEntity.type=='Single Record (SRV)')) && this.parentEntity.modelTableTypes == 'File')) ? '0px' : '22px', 'margin-left': vProp.required=='No' || vProp.required!='null' || vProp.required=='Qualified' ? '%' : '57%', 'visibility': vProp.category != 'User Created'? 'hidden':''  }"
                  (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)"> <span *ngIf="(this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Schedule Calendar' && this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'File') &&  (formViewShow ? true : !vProp.showCurrent ) &&(vProp.required=='No' || ((this.parentEntity['modelTableTypes'] == 'File' ||this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
                      ) ? false : vProp.required=='Qualified') ) && (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV) & Multi Record (MRV)' ||  this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) && (!isCreate || parentEntity?.copyViewRender ) && (formViewShow ? true : vProp.category != 'System Plus') "
                      class="fa fa-trash glycolor pk"></span></div>
            <!-- /For other table types -->
            <!-- For standered table types -->
            <div *ngIf="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && (this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' )" ngDefaultControl name="test_1 2" style="display: inline-block;" [ngStyle]="{'height': ( ((((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File') && vProp.category != 'File' &&  vProp.category !='User Created' && (this.parentEntity['modelTableTypes'] == 'File' ? vProp.category !='System' : true)) ? true : false ) || (vProp.required=='No' || ((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File') ? false : vProp.required=='Qualified'))) && (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV) & Multi Record (MRV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && !isCreate ? '20px' : '0px', 'margin-left': (vProp.category != 'User Created' && (this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File')) || ( vProp.required=='No' || vProp.required=='Qualified') ? '72%' : '72%' }"
                (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)">
                <span *ngIf="((((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' || this.parentEntity['modelTableTypes'] == 'File') && vProp.category != 'File' &&  vProp.category != 'User Created' &&  (this.parentEntity['modelTableTypes'] == 'File' ? vProp.category != 'System' : true)) && (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV) & Multi Record (MRV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) ? true :false )||
                (((vProp.category=='User Created' || (this.parentEntity['modelTableTypes'] == 'File' ? vProp.category=='System' : false )) && vProp.required !='Yes') && (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV) & Multi Record (MRV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) ? true :false )) && (!isCreate || parentEntity?.copyViewRender || parentEntity.recordState =='Active (Incomplete)') || ((((this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)') && (vProp.required !='Yes')
                  && !vProp.id) &&
                  (this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) ? true :false ) || (!vProp.property.id && vProp.category=='User Created' && vProp.required !='Yes') && this.parentEntity.type != 'Multi Record (MRV)' && this.parentEntity.type != 'Single Record (SRV)' )"
                  class="fa fa-trash  glycolor pk 1"></span></div>
            <!-- For standered table types -->

          <div id="cv-plus1" *ngIf="this.parentEntity.recordState != 'Active (Incomplete)' && !formViewShow && last && ((this.parentEntity.type=='Create (CV)'|| this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active (Incomplete)' ?  getPlusIcon() : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id "
                style="display: inline-block;transform: translate(0px, -1px);width: auto; float: right; margin-left: 5px;"
                (click)=" (this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
                || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' || this.parentEntity['modelTableTypes'] == 'File' )
                ? ((vProp.property.id != '' && vProp.property.id != null  ) ? insertViewPropertyAt(vProp) : setValidation=true) :(viewPropertyRecursiveForm.valid  ? insertViewPropertyAt(vProp):setValidation=true)">
                 <span class="fa fa-plus glycolor 1" title="Add View Design"></span>
                </div>
                <div id="cv-plus11" *ngIf="this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && (parentEntity.layout!='Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.layout!='Grid' && this.parentEntity.recordState != 'Active (Incomplete)' && !formViewShow && (this.parentEntity.type=='Multi Record (MRV)' || this.parentEntity.type=='Single Record (SRV)') && (this.parentEntity['modelTableTypes'] == 'File' ? (this.parentEntity.type=='Multi Record (MRV)' || this.parentEntity.type=='Single Record (SRV)' ? false : true) : true)"
                style="display: inline-block;transform: translate(0px, 0px);width: auto;float: right; margin-left: 5px;"
                (click)="((this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
                || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ? (vProp.property.id != '' && vProp.property.id != null  ) :viewPropertyRecursiveForm.valid ) ?insertViewPropertyAt(vProp):setValidation=true">
                 <span class="fa fa-plus glycolor 2" title="Add View Design" *ngIf="(this.parentEntity['modelTableTypes'] != 'Schedule Calendar' || (this.parentEntity['modelTableTypes'] == 'Schedule Calendar' && last ))"></span>
                </div>

                <div *ngIf="last && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))" style="display: inline-block; transform: translate(0, 0); width: auto; float: right; margin-left: 2px; margin-left: -5px;">
                  <span (click)="vProp.lock = !vProp.lock" [ngClass]="vProp.lock ? 'fa fa-lock glycolor' : 'fa fa-unlock glycolor'" [title]="vProp.lock ? 'Locked View Design' : 'Unlocked View Design'"></span>
                </div>

                <div id="cv-plus2" *ngIf="!formViewShow && (this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design' || this.parentEntity['modelTableTypes'] == 'File' || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' || this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' )  && inEditMode && isCreate && last && ((this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) "
                style="transform: translate(0px, -3px);width: auto;float: right; margin-right: 12px;margin-top: 1px" (click)="(vProp.property.id != '' && vProp.property.id != null  )?insertViewPropertyAt(vProp):setValidation=true">
                 <span class="fa fa-plus glycolor 3" title="Add View Design"></span>
                </div>

                <div class="item-p3" *ngIf="(!formViewShow && (this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' )
                && inEditMode && isCreate && last && ((this.parentEntity.type=='Create (CV)'
                || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ))
                && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) && inEditMode && parentEntity.recordState != 'Active (Incomplete)' && !last">
                </div>
           <div id="cv-plus3" *ngIf="!vProp.id && formViewShow && ((this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active (Incomplete)' ?  getPlusIcon() : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) "
           [ngStyle]="{'float' : last ? 'right' : ''} " (click)="(viewPropertyRecursiveForm.valid || vProp?.isFormNameProperty)?insertViewPropertyAt(vProp):setValidation=true">
           
            <span style="margin-right:12px" class="{{last ? 'fa fa-plus glycolor 4' :''}}"  [ngClass]="isFormPropertyCheck(vProp) ? 'disabled' :''" title="Add View Design"></span>
                </div>
                <!-- this div is just to set design -->
                <div id="cv-plus4" *ngIf="formViewShow && last && ((this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active (Incomplete)' ?  getPlusIcon() : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) "

                [ngStyle]="{'transform': (this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design' || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ? 'translate(-45px, 1px)':'', 'float': (this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design' || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' ) ? 'right':''}"
                style=" text-align:right">
                <span (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)" *ngIf = "!vProp.isFormNameProperty || parentEntity.type=='Create (CV) & Single Record (SRV)'" style="padding: 1.5px 5px;" class="fa fa-trash 1 glycolor" title="Remove View Design"></span>
                <span *ngIf = "!(!vProp.isFormNameProperty || parentEntity.type=='Create (CV) & Single Record (SRV)')" style="padding: 1.5px 5px;"></span>
                <span   (click)="(viewPropertyRecursiveForm.valid|| vProp?.isFormNameProperty)?insertViewPropertyAt(vProp):setValidation=true" *ngIf="vProp.id && last && formViewShow && ((this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active Incomplete' ?  getPlusIcon() : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) " class="{{last ? 'fa fa-plus glycolor 5 me-2' :''}}" title="Add View Design"></span>
                <!-- <span (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)" *ngIf = "!vProp.isFormNameProperty || parentEntity.type=='Create (CV) & Single Record (SRV)'" style="padding: 1.5px 5px;" class="fa fa-trash 1 glycolor" title="Remove View Design"></span> -->
              </div>
                <div id="cv-plus5" *ngIf=" (( (createView == true &&  !formViewShow) ? getPlusIcon() : true ) && last && (this.parentEntity.modelTableTypes != 'Schedule Design' && this.parentEntity.modelTableTypes != 'Schedule Record' && this.parentEntity.modelTableTypes != 'Schedule Calendar' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'File' ) && ( (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active Incomplete' ?  true : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) )"
  style="display: inline-block;"> </div>

                <div class="qw1" id="cv-plus6 1" *ngIf=" (((this.parentEntity.modelTableTypes == 'Standard' && !vProp.id &&vProp.required == 'User Created') ? (last ? false : true) : true)) &&  (((this.parentEntity.modelTableTypes == 'File' && !vProp.id && this.parentEntity.type!='Multi Record (MRV)' && this.parentEntity.type!='Multi Record (MRV) & Single Record (SRV)' &&  this.parentEntity.type!='Single Record (SRV)')  || ( (parentEntity.layout!='Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && this.parentEntity.recordState != 'Active (Incomplete)' && !formViewShow && ((this.parentEntity.modelTableTypes == 'Standard' ||this.parentEntity.modelTableTypes == 'File' ||this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && this.parentEntity.type!='Multi Record (MRV)' &&  ((this.parentEntity.modelTableTypes == 'Standard' || this.parentEntity.modelTableTypes == 'File' || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') ? (vProp.category != 'User Created' ? ( ((!isCreate ? (vProp.required == 'No' || vProp.required == 'Qualified' || vProp.required == 'Yes' || vProp.required == null ) : false) || vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Created Timestamp' || vProp.displayNameCopy == 'Created Timestamp' || vProp.displayNameCopy == 'Created_Timestamp' || vProp.displayNameCopy == 'Record_State' || vProp.displayNameCopy == 'Record State' || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
                vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' ) ? true : false ) : true  ): true ) && ( (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV) & Multi Record (MRV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' )) && (formViewShow ? true :  ( createView == true || parentEntity.recordState =='Active (Incomplete)' ?  getPlusIcon() : false )) && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && (!isCreate ? true : vProp.category !='System Plus' )))))"
                [ngStyle]="{'margin-right' : last ? '12px' : ''}" style="transform: translate(0px, 0px);width: auto;display: inline-block; float:right">
                <span *ngIf="this.parentEntity.modelTableTypes == 'Schedule Calendar' ? vProp.required != 'Qualified' : true && ((this.parentEntity.modelTableTypes == 'Standard' || (this.parentEntity.modelTableTypes == 'File' && (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && (((['timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayName?.toLowerCase()) || ['timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayNameCopy?.toLowerCase())) && parentEntity.modelTableTypes == 'Schedule Design') ||(vProp.required == 'Qualified') ? (vProp.category == 'User Created' ? true : false) : true) && ((vProp.required == 'Yes' || vProp.required == 'Yes for Complete Record') ? ((vProp.propertySelection =='Navigation Defined (Hide)' || vProp.propertySelection =='Navigation Defined (Display)' || vProp?.propertyAutomationNavigation?.recordState == 'Active') ? true : false) : true) || (vProp.required == 'Qualified' && vProp.category == 'User Created' && this.parentEntity.modelTableTypes != 'File') || (vProp.required == 'Qualified' && vProp.category == 'User Created' && this.parentEntity.modelTableTypes == 'File' && (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) )"  (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)" class="fa fa-trash 2 glycolor" title="Remove View Design"></span>
              </div>
              <div class="qw2" id="cv-plus6 2" *ngIf="(parentEntity.layout!='Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.layout!='Grid' && this.parentEntity.recordState != 'Active (Incomplete)' && !formViewShow && ((this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar' || this.parentEntity.modelTableTypes == 'Standard') && (this.parentEntity.type=='Multi Record (MRV)' || parentEntity.type =='Single Record (SRV)')) "
               [ngStyle]="{'margin-right' : last ? '7px' : ''}" style="    transform: translate(0px, 0px);width: auto; float:right; display: inline-block">
                <span *ngIf="(((this.parentEntity.modelTableTypes == 'Standard' || this.parentEntity.modelTableTypes == 'File' || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && ((vProp.required == 'Yes' || vProp.required == 'Yes for Complete Record') ? ((vProp.propertySelection =='Navigation Defined (Hide)' || vProp.propertySelection =='Navigation Defined (Display)' || vProp?.propertyAutomationNavigation?.recordState == 'Active') ? true : false) : true) &&  !((['timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayName?.toLowerCase()) || ['timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayNameCopy?.toLowerCase())) && parentEntity.modelTableTypes == 'Schedule Design') && (  (vProp.required == 'Qualified' ? (vProp.category == 'User Created' ? true: false): true))) || ((parentEntity.type =='Multi Record (MRV)' || parentEntity.type =='Single Record (SRV)' || this.parentEntity.type=='Multi Record (MRV) & Single Record (SRV)') && this.parentEntity.modelTableTypes != 'Schedule Calendar' && this.parentEntity.modelTableTypes != 'Schedule Design')) "  (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)" style="padding: 0 2px;" class="fa fa-trash 3 glycolor" title="Remove View Design"></span>
              </div>
              <div class="qwr" id="cv-plus7" *ngIf="!formViewShow && ((this.parentEntity.modelTableTypes == 'Standard' || this.parentEntity.modelTableTypes == 'File' ||  this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar')  && parentEntity.type !='Single Record (SRV)' && isCreate && this.parentEntity.type!='Multi Record (MRV)' && ((this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') ? (vProp.category !='User Created' ? ( (vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Created Timestamp' || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
              vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' || ( (vProp.required == 'Qualified' ||vProp.required == 'Yes' || vProp.required == 'No' || vProp.required == null) && isCreate) ) ? true : false ) : true  ): true )  && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) && (this.parentEntity.modelTableTypes == 'File' ? (vProp.id ? true : false) : true )"
              style="width: auto;float: right"
              [ngStyle]="{'transform' : setTransform(parentEntity.type) ,'margin-right' : last ? '-5px' : ''}">

           <span *ngIf="inEditMode && isCreate && vProp.recordState !== 'Archived' &&(this.parentEntity.modelTableTypes == 'Standard' ||this.parentEntity.modelTableTypes == 'File' || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && ((vProp.required == 'Yes' || vProp.required == 'Yes for Complete Record') ? ((vProp.propertySelection =='Navigation Defined (Hide)' || vProp.propertySelection =='Navigation Defined (Display)' || vProp?.propertyAutomationNavigation?.recordState == 'Active') ? true : false) : true) && ((((['schedule_design_id', 'schedule design id', 'timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayName?.toLowerCase()) || ['schedule_design_id', 'schedule design id', 'timing_dependency_end', 'timing dependency end','resource conflict', 'resource_conflict','category','type','subtype'].includes(vProp.displayNameCopy?.toLowerCase())) && parentEntity.modelTableTypes == 'Schedule Design') || vProp.required == 'Qualified') ? (vProp.category == 'User Created' ? true : false): true)"  (click)="(!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp))" style="padding: 0 2px;" class="fa fa-trash 4 glycolor" title="Remove View Design"></span>
            </div>
              <div class="setdesign" *ngIf="(this.isScheduleTable && !mrvLayout) && (!formViewShow && (( (this.parentEntity.modelTableTypes == 'Standard' || this.parentEntity.modelTableTypes == 'File' || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && !formViewShow  && inEditMode  && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && (last && vProp.category =='User Created') && !vProp.showCurrent && parentEntity.type !='Multi Record (MRV)' && parentEntity.type !='Single Record (SRV)' ) || ( (this.parentEntity.modelTableTypes == 'Standard' || this.parentEntity.modelTableTypes == 'File' || this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') &&!formViewShow  && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !last && (vProp.isPrevious ? true : (vProp.category == 'User Created' ? true : false ) ) && vProp.category =='User Created' && parentEntity.type !='Multi Record (MRV)' &&  parentEntity.type !='Single Record (SRV)' )
              || ( (this.parentEntity.modelTableTypes == 'Standard' ||this.parentEntity.modelTableTypes == 'File' ||this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar') && (vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Created Timestamp' || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
              vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' || ( vProp.required == 'No' && isCreate) ) && vProp.showCurrent && vProp.isPrevious && !last)))"></div>
              <div class="setdesign edit" *ngIf="((vProp.category == 'User Created' && (parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Create (CV)'  || parentEntity.type=='Create (CV) & Single Record (SRV)')) ? (vProp.showTrash == true ? (parentEntity.type!='Create (CV), Multi Record (MRV) & Single Record (SRV)' ? true : false) : false) : true )  && !formViewShow && ((this.parentEntity.modelTableTypes == 'Schedule Design' || this.parentEntity.modelTableTypes == 'Schedule Record' || this.parentEntity.modelTableTypes == 'Schedule Calendar')  && parentEntity.type !='Multi Record (MRV)' &&  parentEntity.type !='Single Record (SRV)' )  && isCreate && !vProp.showCurrent && (parentEntity.layout != 'Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) &&((vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Created Timestamp' || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
              vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' || (vProp.required == 'No' && last)) ? true : (vProp.category == 'User Created' ? true : false) ) "></div>


              <!-- this div is just to set design -->
                <!-- This div is just to set design -->
                <div *ngIf="last && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))" class="lock"></div>
                <div class="rr" *ngIf="((formViewShow && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)))? true : ((this.parentEntity['modelTableTypes'] == 'File' ? (last == true ? true : ((parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') ? true : false)) : true)  &&  (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))   && (vProp.category == 'System Plus' ? (isCreate == false ? showDivToSetDesign(last) : (vProp.displayName == 'Type' || (vProp.displayName == 'Name' && this.parentEntity.modelTableTypes == 'Schedule Design' && !inEditMode ) ||  vProp.displayName == 'Subtype' || vProp.displayName == 'Category') ? (vProp.id == null ? true : ((parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Create (CV)') ? true :  false)) : true) : (this.parentEntity['modelTableTypes'] == 'File' && last && this.parentEntity.id && parentEntity.type != 'Multi Record (MRV)' && parentEntity.type != 'Single Record (SRV)') ? false : showDivToSetDesign(last)))) || (this.parentEntity['modelTableTypes'] == 'File' && ((this.parentEntity['modelTableTypes'] == 'File' && (parentEntity.layout === 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) ? last == true ? true : false :  ((parentEntity.layout === 'Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type=='Single Record (SRV)') ? false : parentEntity.id ? false : true))"
                [ngStyle]="{'height': (this.parentEntity.type=='Create (CV)' && formViewShow) ?'20px' : '0px'}"> </div>
                <div class="rr mrv" *ngIf="(((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && parentEntity.type=='Multi Record (MRV)') && (vProp.category == 'System Plus') && (vProp.displayName == 'Type' || vProp.displayName == 'Subtype' || vProp.displayName == 'Category') && (vProp.id != null ? true : (this.parentEntity['modelTableTypes'] == 'File' && parentEntity.id ? true: false)))"> </div>


                <div class="item p-3 5" *ngIf="cvValidation() && ((!printoutShow) ? !(parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) : true)">

                  <ng-multiselect-dropdown *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length>1"
                    [msId]="'vpr07'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                    [settings]="constantsModelView.dropdownSettingsForRelated"
                    [placeholder]="singleSelectPlaceholder(vProp.viewTabId, 'View Tab (R)')"
                    (onSelect)="onChange_ViewTab(vProp, vProp.viewTabId)" (onDeselect)="onChange_ViewTab(vProp, vProp.viewTabId)"
                    [data]="parentEntity.viewTabs" [(ngModel)]="vProp.viewTabId" [isRelatedSelection]="true"
                    [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity.modelTableTypes == 'Schedule Design' || parentEntity.modelTableTypes == 'Schedule Record' || parentEntity.modelTableTypes == 'Schedule Calendar') && (parentEntity.modelTableTypes == 'Schedule Design' ? constantsModelView.schedule_design_fix_col.includes(vProp.displayName?.toLowerCase()) : (vProp.category == 'System Plus') ? ( (vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Type' || vProp.displayName == 'Subtype' || vProp.displayName == 'Status' || vProp.displayName == 'Category' || vProp.displayName == 'Name'  || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
                             vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' ) ? false : true ) : false  ))">
                  </ng-multiselect-dropdown>

                  <span class="text" *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length==1">Base Tab</span>
                </div>


                <!--Added property type for row as per 4482-->

                <!--property type-->
                <div *ngIf="!formViewShow && ((parentEntity.layout =='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || printoutShow)" class="p-3 p1 item" >
                                    <label title="{{vProp.propertyType}}">
                    <span>{{vProp.propertyType}}</span>
                  </label>
                </div>
  <!--model table-->
            <div class="item p-3 t333" *ngIf="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Create (CV) & Single Record (SRV)')  && !formViewShow" (click)="setMtTables()" >
                <!--   3591 Implementation in all application -->
            <ng-multiselect-dropdown
              *ngIf="((parentEntity.layout != 'Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) &&  parentEntity.layout !='Grid') && (parentEntity.viewColumns[0].viewProperties.length > 1 && !vProp.id && !parentEntity.copyViewRender) && !vProp.isAutoAddedProperty"
              [msId]="'vpr110'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
              [settings]="constantsModelView.dropdownSettingsForRelatedTable" [placeholder]="'Table (R)'"
              (onSelect)="setLevelofViewProperty(vProp,vProp.relatedModelTables);getModelProperties(vProp,vProp.selectedModelTableId);"
              (onDeSelect)="setLevelofViewProperty(vProp,vProp.relatedModelTables);getModelProperties(vProp,vProp.selectedModelTableId);vProp.relatedTableProperties = null"
              [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Table is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                                    (vProp?.selectedModelTableId == null || vProp?.selectedModelTableId == '' || vProp?.selectedModelTableId == undefined || vProp?.selectedModelTableId == 'null') ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
              [data]="vProp.vpMtTables" [(ngModel)]="vProp.selectedModelTableId" [isRelatedSelection]="true"
              [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || svcModelViewData.disableIfSameOneToMany">
            </ng-multiselect-dropdown>

            <ng-multiselect-dropdown
             *ngIf="parentEntity.viewColumns[0].viewProperties.length === 1 && !vProp.id && !parentEntity.copyViewRender && !vProp.isAutoAddedProperty" [msId]="'vpr02'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
              [settings]="constantsModelView.dropdownSettingsForRelatedTable" [placeholder]="'Table (R)'"
              (onSelect)="setLevelofViewProperty(vProp,vProp.baseModelTables);getModelProperties(vProp,vProp.selectedModelTableId)"
              (onDeSelect)="setLevelofViewProperty(vProp,vProp.baseModelTables);getModelProperties(vProp,vProp.selectedModelTableId);vProp.relatedTableProperties = null"
              [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Table is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                      (vProp?.selectedModelTableId == null || vProp?.selectedModelTableId == '' || vProp?.selectedModelTableId == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
              [data]="svcModelViewData.firstColumnData" [(ngModel)]="vProp.selectedModelTableId" [isRelatedSelection]="true"
              [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')">
            </ng-multiselect-dropdown>


            <label style="margin-bottom: 0;" *ngIf="((parentEntity.layout == 'Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ||  parentEntity.layout =='Grid') || ((parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && (vProp.id || parentEntity.copyViewRender || vProp.isAutoAddedProperty))">{{this.mainLayout.replaceUnderScore(vProp.modelTable_Name)}}</label>

          </div>

          <!--/model table-->

           <!-- Property Type -->
           <div class="item p-3 g3333" *ngIf="formViewShow  ">
            <!-- 3591 Implementation in all application -->
                              <ng-multiselect-dropdown class="unset"
                    *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty"
                    [msId]="'vpr11'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                    [placeholder]="'Property Type (R)'"
                    (onSelect)="getPropertyByPropertyType(vProp)" (onDeSelect)="getPropertyByPropertyType(vProp)"
                    [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'' " [data]="constantsModelView.propertyTypes" [(ngModel)]="vProp.propertyType"
                    [isRelatedSelection]="true" [disabled]="vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)'">
                  </ng-multiselect-dropdown>

          <label *ngIf="vProp.tier == 'Non Table' || (!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty)" title="{{vProp.propertyType}}" >{{vProp.propertyType}}</label>

          <label class="item"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''" *ngIf="vProp.id || vProp.isRequired">{{vProp.displayName.search('Static Text') != -1 || vProp.displayName.search('Static Image') != -1 || vProp.displayName.search('Blank Space') != -1 ? '' : replaceUnderScores(vProp.propertyType)}}</label>
                </div>

          <!-- Property Type -->

        <!-- Table Property -->

           <div class="item p-3 g44444" *ngIf="((parentEntity.layout == 'Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? !(vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1) :  true)&& (formViewShow && ((parentEntity.table && parentEntity.table.length == 1) || ((this.urlParams?.snapshot?.routeConfig?.path?.includes('edit') && parentEntity.table))) )">
              <!-- 3591 Implementation in all application -->
                    <!-- <ng-multiselect-dropdown class="unset"
                      *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty"
                      [msId]="'vpr07'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                      [placeholder]="'Table Property (R)'"
                      (onSelect)="getPropertyByPropertyType(vProp)" (onDeSelect)="getPropertyByPropertyType(vProp)"
                      [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                      (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'' " [data]="vProp.propertyTypeTableValue" [(ngModel)]="vProp.propertyType"
                      [isRelatedSelection]="true" [disabled]="vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)'">
                    </ng-multiselect-dropdown> -->

                    <ng-multiselect-dropdown
                    *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty && !(parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))"
                    [msId]="'vpr111'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                    (onSelect)="getPropertyByTableName(vProp)" (onDeSelect)="getPropertyByTableName(vProp)"
                    [settings]="constantsModelView.dropdownSettingsForTableProperty" [placeholder]="'Table (R)'"
                    [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Table is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                                          (vProp?.selectedModelTableId == null || vProp?.selectedModelTableId == '' || vProp?.selectedModelTableId == undefined || vProp?.selectedModelTableId == 'null') ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
                    [data]="vProp.vpMtTables" [(ngModel)]="vProp.selectedModelTableId" [isRelatedSelection]="true"
                    [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || svcModelViewData.disableIfSameOneToMany">
                  </ng-multiselect-dropdown>

                  <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty && !(parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))" title="{{vProp.propertyType}}" >{{vProp?.modelTableName}}</label>

                  <label class="item "  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''" *ngIf="(vProp.id || vProp.isRequired) && !(parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))">{{vProp.displayName.search('Static Text') != -1 || vProp.displayName.search('Static Image') != -1 || vProp.displayName.search('Blank Space') != -1 ? '' : replaceUnderScores(vProp?.modelTableName)}}</label>

            </div>
            <!-- Table Property -->

            <!-- Related Table -->
          <div class="item p-3 12" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&(parentEntity.layout == 'Grid') )&&(printoutShow)">


<label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty">{{mainLayout.replaceUnderScore(vProp.modelTableName)}}</label>
<label >{{mainLayout.replaceUnderScore(vProp.modelTableName)}}</label>

<!-- <label class="item  {{preUrl == 'formView' ? changeColor(vProp) : ''}}" (dblclick)="preUrl == 'formView' ? viewPropertySrv(vProp.id,vProp) : ''" *ngIf="(vProp.id || vProp.isRequired) && vProp.property.type != 'Related'">{{vProp.displayName.search('Static Text') != -1 || vProp.displayName.search('Static Image') != -1 || vProp.displayName.search('Blank Space') != -1 ? '' : mainLayout.replaceUnderScore(vProp.relatedTableName)}}</label> -->

    </div>
<!-- Related Table -->

            <!-- Related Table Property -->
            <div class="item p-3 bbgg" *ngIf="!((vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp?.staticText || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp?.isStaticImage || vProp.displayName?.search(constantsModelView.Blank_Space) != -1)&&((parentEntity.layout==constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == constantsModelView.ViewType_Printout) )&&((parentEntity.type == constantsModelView.ViewType_SingleRecord || parentEntity.layout == constantsModelView.Layout_Horizontal_Grid_2) || (!printoutShow && !formViewShow && parentEntity.type == constantsModelView.ViewType_MultiRecord && (parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design))))">
              <!-- <div *ngIf="(vProp.tier == 'Down' || vProp.tier == 'Up')"> -->
              <ng-multiselect-dropdown *ngIf="inEditMode && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && vProp?.relatedTableProperties != null && vProp?.relatedTableProperties.length > 0"
                [msId]="'vpr122'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="overflow-hidden"
                [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Relationship Property (R)'"
                [data]="vProp?.relatedTableProperties" [(ngModel)]="vProp.relationshipProperty" [isRelatedSelection]="true"
                [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(constantsModelView.errorMsg.related_property) != -1 || error_msg.indexOf(constantsModelView.errorMsg.fillAllRequired) != -1) : false ) &&
                (vProp.relationshipProperty == null || vProp.relationshipProperty == '' || vProp.relationshipProperty == undefined ) ? 'errorsShowMultiSelect':'', ((parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? '': 'unset' ]" >
              </ng-multiselect-dropdown>

              <label *ngIf="vProp.relationshipPropertyName && vProp.relationshipPropertyName != null" title="{{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}">
                 {{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}44
              </label>
                                      <!-- </div> -->
          </div>
          <!-- /Related Table Property -->

          <!--model property-->
          <div class="item p-3 p1 123" *ngIf="!formViewShow">
              <!-- vProp.modelProperties -->
              <!--  3591 Implementation in all application -->
              <ng-multiselect-dropdown
              *ngIf="(parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && !vProp.isRequired && !vProp.modelViewModelTablePropertiesAutomation && !vProp.tablePropertiesAutomation && !vProp.isAutoAddedProperty"
                [msId]="'vpr113'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                [placeholder]="'Property (R)'"
                (onSelect)="onModelPropertyChange(vProp.property.id);relatedModelView(vProp.property.id);getModelViewModelTablePropertiesValue();setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp);setMasterSortData()"
                (onDeSelect)="onModelPropertyChange(vProp.property.id);relatedModelView(vProp.property.id);getModelViewModelTablePropertiesValue();setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
                [data]="vProp.propertiesData" [(ngModel)]="vProp.property.id" [filteredPropertyData]="vProp.propertiesData" [isRelatedSelection]="true"
                [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')">
              </ng-multiselect-dropdown>

              <ng-multiselect-dropdown *ngIf="(parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && !vProp.isRequired && vProp.modelViewModelTablePropertiesAutomation && !vProp.isAutoAddedProperty"
                [msId]="'vpr116'+'_'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                [placeholder]="'Property (R)'"
                (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();showBool = true;;setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                (onDeselect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();showBool = true;setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
                [data]="vProp.modelViewModelTablePropertiesAutomation" [filteredPropertyData]="vProp.modelViewModelTablePropertiesAutomation"  [(ngModel)]="vProp.property.id" [isRelatedSelection]="true"
                [disabled]="vProp?.recordState != 'Active'">
              </ng-multiselect-dropdown>

              <!-- model table properties for MRV -->

              <ng-multiselect-dropdown  *ngIf="(parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && !vProp.isRequired && !vProp.modelViewModelTablePropertiesAutomation && vProp.tablePropertiesAutomation && !vProp.isAutoAddedProperty"
                [msId]="'vpr117'+'_'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                [placeholder]="'Property (R)'"
                (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                (onDeSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
                [data]="vProp.tablePropertiesAutomation" [filteredPropertyData]="vProp.tablePropertiesAutomation" [(ngModel)]="vProp.property.id" [isRelatedSelection]="true"
                [disabled]="vProp?.recordState != 'Active'">
              </ng-multiselect-dropdown>

              <label *ngIf="(parentEntity.layout != 'Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || vProp.id || vProp.isRequired || vProp.isAutoAddedProperty" title="{{ replaceUnderScores(vProp.property.name) }}">{{  (parentEntity.layout !=='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))&&this.showStaticValue?.length>0&&this.showStaticValue!==' '?replaceUnderScores(this.showStaticValue,0):  replaceUnderScores(vProp.property.name)   }}<span class='required-black' *ngIf="this.parentEntity['modelTableTypes'] == 'File' && vProp.required =='Yes' && vProp.category == 'User Created'"></span></label>
 </div>

          <div class="item p-3 11 d"  *ngIf="formViewShow && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))">
    <!-- 3591 Implementation in all application -->
           <ng-multiselect-dropdown
            *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty"
            [msId]="'vpr126'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForForm"
            [placeholder]="'Property (R)'"
            (onChange)="addRelatedTable(vProp.property.id)"
            (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id);setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp);setMasterSortData()"
            (onDeSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id);setDependencyInColumnView();forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp);setMasterSortData()"
            [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
            (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] " [data]="(vProp.propertyType && ((vProp.tier == this.constantsModelView.Tier.Self || vProp.tier == this.constantsModelView.Tier.Up || vProp.tier == this.constantsModelView.Tier.Multiselect || vProp.tier == this.constantsModelView.Tier.Down) ? vProp.selectedModelTableId : true)) ? vProp.modelViewModelTableProperties : []" [(ngModel)]="vProp.property.id"
            [isRelatedSelection]="true" [filteredPropertyData]="vProp.modelViewModelTableProperties" [disabled]="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' : false">
          </ng-multiselect-dropdown>
    <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty">{{vProp.property.name}}</label>

    <label class="item "  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''" *ngIf="vProp.id || vProp.isRequired">{{ (parentEntity.layout !=='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))&&this.showStaticValue?.length>0&&this.showStaticValue!==' '?replaceUnderScores(this.showStaticValue,0): replaceUnderScores(vProp.property.name)}}</label>

        </div>


          <!--/model property-->


          <!-- Related Table -->
          <div class="item p-3 12" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&(parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) )&&(formViewShow)">
                       <!-- 3591 Implementation in all application -->
                  <!-- <ng-multiselect-dropdown class="unset"
                    *ngIf="(vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && !vProp?.isFormNameProperty"
                    [msId]="'vpr07'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                    [placeholder]="'Related Table (R)'"
                    (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue()"
                    (onDeselect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue()"
                    [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) ||
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'' " [data]="vProp.propertyTypes" [(ngModel)]="vProp.propertyType"
                    [isRelatedSelection]="true" [disabled]="vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)'">
                  </ng-multiselect-dropdown> -->

            <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty">{{mainLayout.replaceUnderScore(vProp.modelTableName)}}</label>
            <label *ngIf="(vProp.table == undefined || vProp.table == null) && vProp.relatedTable && vProp.propertyType == constantsModelView.formPropertyTypes.relatedNonTable">{{mainLayout.replaceUnderScore(vProp.modelTableName)}}</label>

            <!-- <label class="item  {{preUrl == 'formView' ? changeColor(vProp) : ''}}" (dblclick)="preUrl == 'formView' ? viewPropertySrv(vProp.id,vProp) : ''" *ngIf="(vProp.id || vProp.isRequired) && vProp.property.type != 'Related'">{{vProp.displayName.search('Static Text') != -1 || vProp.displayName.search('Static Image') != -1 || vProp.displayName.search('Blank Space') != -1 ? '' : mainLayout.replaceUnderScore(vProp.relatedTableName)}}</label> -->

                </div>
          <!-- Related Table -->

           <!-- Related Table Property -->
           <div class="item p-3 kkjj" *ngIf="!(vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1) && ((parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && formViewShow)">
            <!-- <div *ngIf="(vProp.tier == 'Down' || vProp.tier == 'Up')"> -->
            <ng-multiselect-dropdown *ngIf="inEditMode && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && vProp?.relatedTableProperties != null && vProp?.relatedTableProperties.length > 0"
              [msId]="'vpr123'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="overflow-hidden"
              [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Relationship Property (R)'"
              [data]="vProp?.relatedTableProperties" [(ngModel)]="vProp.relationshipProperty" [isRelatedSelection]="true"
              [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(constantsModelView.errorMsg.related_property) != -1 || error_msg.indexOf(constantsModelView.errorMsg.fillAllRequired) != -1) : false ) &&
              (vProp.relationshipProperty == null || vProp.relationshipProperty == '' || vProp.relationshipProperty == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? '': 'unset' ]" >
            </ng-multiselect-dropdown>

            <label *ngIf="vProp.relationshipPropertyName && vProp.relationshipPropertyName != null" title="{{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}">
               {{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}99
            </label>
                                    <!-- </div> -->
        </div>
        <!-- /Related Table Property -->


          <div class="item p-3 11 c"  *ngIf="formViewShow && (parentEntity.layout == 'Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))">
            <!-- 3591 Implementation in all application -->
                   <ng-multiselect-dropdown
                    *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty"
                    [msId]="'vpr127'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForForm"
                    [placeholder]="'Property (R)'"
                    (onChange)="addRelatedTable(vProp.property.id)"
                    (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id)"
                    (onDeselect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id)"
                    [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] " [data]="(vProp.propertyType && ((vProp.tier == this.constantsModelView.Tier.Self || vProp.tier == this.constantsModelView.Tier.Up || vProp.tier == this.constantsModelView.Tier.Multiselect || vProp.tier == this.constantsModelView.Tier.Down) ? vProp.selectedModelTableId : true)) ? vProp.modelViewModelTableProperties : []" [(ngModel)]="vProp.property.id"
                    [isRelatedSelection]="true" [disabled]="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' : false">
                  </ng-multiselect-dropdown>
            <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty">{{vProp.property.name}}</label>

            <label class="item "  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''" *ngIf="vProp.id || vProp.isRequired">{{ (parentEntity.layout !=='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))&&this.showStaticValue?.length>0&&this.showStaticValue!==' '?replaceUnderScores(this.showStaticValue,0): replaceUnderScores(vProp.property.name)}}</label>

                </div>


                  <!--/model property-->




          <!-- header -->

            <div class="item  p-3 3yes" *ngIf="!vProp.isStaticText && !vProp.isStaticImage && !vProp.isBlankSpace">
                <input title="{{vProp.displayName}}" (change)="setMasterSortData()" style="text-align: center;" #displayName="ngModel" [(ngModel)]="vProp.displayName" *ngIf="vProp.displayName?.length == 0 || replaceUnderScore(vProp.displayName)" maxlength="50" ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" [style]="vProp?.fontStylingForLabel"
                    autocomplete="off" placeholder="Display Name (R)" [disabled]="vProp?.isFormNameProperty || ((vProp?.recordState != 'Active' && vProp?.recordState != 'Active Incomplete') || (vProp.propertySelection==='Navigation Defined (Hide)' && (vProp.displayName.length == 0 || replaceUnderScore(vProp.displayName))))"
                    [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Display Name is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                 (vProp.displayName == null || vProp.displayName == '' || vProp.displayName?.trim().length == 0)) || ((parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : (vProp.displayName == null || vProp.displayName == '' || vProp.displayName?.trim().length == 0 ) ) ? 'errorsShow':'' "  (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"/>
            </div>
            <div class="item p-3 44" *ngIf="vProp.isStaticText ? (vProp.displayName.search('Static Text') != -1 || vProp.isStaticText):false" [ngStyle]="{'background-color':!formViewShow || vProp.displayName!='Static Text 01'? '#ffffff':'#eee'}">
                <input #displayName="ngModel" [(ngModel)]="vProp.displayNameValue" *ngIf="vProp.displayName?.length == 0 || replaceUnderScore(vProp.displayName)" maxlength="50"  (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,'Static Text',vProp)"
                ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
            </div>
            <div class="item p-3 55 " *ngIf="vProp.isStaticImage ? (vProp.displayName.search('Static Image') != -1 || vProp?.isStaticImage) :false" [ngStyle]="{'background-color':!formViewShow || vProp.displayName!='Static Image 01'? '#ffffff':'#eee'}">
              <input #displayName="ngModel" [(ngModel)]="vProp.displayNameValue" *ngIf="vProp.displayName?.length == 0 || replaceUnderScore(vProp.displayName)" maxlength="50" (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,'Static Text',vProp)"
              ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
          </div>
          <div class="item p-3 66" *ngIf="vProp.isBlankSpace ? vProp.displayName.search('Blank Space') != -1:false" style="background-color: #ffffff;">
            <input #displayName="ngModel" disabled [(ngModel)]="vProp.displayNameValue" *ngIf="vProp.displayName?.length == 0 || replaceUnderScore(vProp.displayName)" maxlength="50"
            ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
        </div>
            <!--/item header -->

                        <!-- Related Table Property -->
                        <div class="item p-3 ll;;" *ngIf="((parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && formViewShow)">
                          <!-- <div *ngIf="(vProp.tier == 'Down' || vProp.tier == 'Up')"> -->
                          <ng-multiselect-dropdown *ngIf="inEditMode && (parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && !vProp.id && vProp?.relatedTableProperties != null && vProp?.relatedTableProperties.length > 0"
                            [msId]="'vpr124'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="overflow-hidden"
                            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Relationship Property (R)'"
                            [data]="vProp?.relatedTableProperties" [(ngModel)]="vProp.relationshipProperty" [isRelatedSelection]="true"
                            [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(constantsModelView.errorMsg.related_property) != -1 || error_msg.indexOf(constantsModelView.errorMsg.fillAllRequired) != -1) : false ) &&
                            (vProp.relationshipProperty == null || vProp.relationshipProperty == '' || vProp.relationshipProperty == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? '': 'unset' ]" >
                          </ng-multiselect-dropdown>

                          <label *ngIf="vProp.relationshipPropertyName && vProp.relationshipPropertyName != null" title="{{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}">
                             {{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}123
                          </label>
                                                  <!-- </div> -->
                      </div>
                      <!-- /Related Table Property -->

            <!--item width-->
           <!-- <div class="item col-width" *ngIf="inEditMode && parentEntity.layout=='Column' && vProp.propertySelection!=='Navigation Defined (Hide)'">
                <span class="fa fa-minus-circle" (click)="onChange_PropertyWidth(vProp, -10)" title="Decrease Column Width"></span>
                <input [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category !='User Created' : false)" #width="ngModel" [(ngModel)]="vProp.width" (ngModelChange)="onChange_PropertyWidth(vProp, 0)" ngDefaultControl name="width" class="form-control" placeholder="{{constantsModelView.ViewProperty_DefaultWidth}}" />
                <span class="fa fa-plus-circle" (click)="onChange_PropertyWidth(vProp, 10)" title="Increase Column Width"></span>
            </div>
            <div class="item col-width" *ngIf="inEditMode && parentEntity.layout=='Column' && vProp.propertySelection==='Navigation Defined (Hide)'">
                </div> -->
            <!--/item width-->
            <!-- View tabs Column data for model view -->
            <div class="item p-3 5" *ngIf="cvValidation() && !printoutShow && !(parentEntity.layout == 'Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))">

             <!-- <select [disabled]="((parentEntity.modelTableTypes == 'Schedule Record' || parentEntity.modelTableTypes == 'Schedule Calendar') && vProp.category!='User Created') || (vProp?.isFormNameProperty || (disableViewTab(vProp) ? true : (vProp?.isFormNameProperty ? true : ((!inEditMode || (vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity.modelTableTypes == 'Schedule Design' || parentEntity.modelTableTypes == 'Schedule Record' || parentEntity.modelTableTypes == 'Schedule Calendar') && ((vProp.category == 'System Plus')) ? (!inEditMode || (vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Type' || vProp.displayName == 'Subtype' || vProp.displayName == 'Status' || vProp.displayName == 'Category' || vProp.displayName == 'Name'  || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
              vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' ) ? false : true ) : false  ))))))" *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length>1" ngDefaultControl name="ciewTabs Columns" class="form-control select-enums" [(ngModel)]="vProp.viewTabId" (ngModelChange)="onChange_ViewTab(vProp, vProp.viewTabId)">
          <option *ngFor="let viewTabName of parentEntity.viewTabs;" [ngValue]="viewTabName.id">
            {{this.mainLayout.replaceUnderScore(viewTabName.name)}}</option>
        </select> -->
        <ng-multiselect-dropdown *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length>1"
        [msId]="'vpr107'+'_'+VTabIndex+'_'+itemIndex+'_'+vProp.displayName?.replace(' ','_')" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
        [placeholder]="singleSelectPlaceholder(vProp.viewTabId, 'View Tab (R)')" [isBlankRowShow]="isBlankRowShow"
        (onSelect)="onChange_ViewTab(vProp, vProp.viewTabId)"
        (onDeselect)="onChange_ViewTab(vProp, vProp.viewTabId)"
        [data]="parentEntity.viewTabs"
        [(ngModel)]="vProp.viewTabId" [isRelatedSelection]="true"
        [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity.modelTableTypes == 'Schedule Design' || parentEntity.modelTableTypes == 'Schedule Record' || parentEntity.modelTableTypes == 'Schedule Calendar') && (parentEntity.modelTableTypes == 'Schedule Design' ? constantsModelView.schedule_design_fix_col.includes(vProp.displayName?.toLowerCase()) : (vProp.category == 'System Plus') ? ( (vProp.displayName == 'Id' ||  vProp.displayName == 'Created_Timestamp' || vProp.displayName == 'Type' || vProp.displayName == 'Subtype' || vProp.displayName == 'Status' || vProp.displayName == 'Category' || vProp.displayName == 'Name'  || vProp.displayName == 'Reason_for_Edit_Pick_List' || vProp.displayName == 'Reason for Edit Pick List' || vProp.displayName == 'Last_Edited_Timestamp' || vProp.displayName == 'Last Edited Timestamp' ||
        vProp.displayName == 'Last_Edited_By' || vProp.displayName == 'Last Edited By'  || vProp.displayName == 'Record_Manager_Pick_List'  || vProp.displayName == 'Record Manager Pick List' ||  vProp.displayName == 'Record_State'  ||  vProp.displayName == 'Record State' || vProp.displayName == 'Created_By' || vProp.displayName == 'Created By' || vProp.displayName == 'Review_State' ||  vProp.displayName == 'Review State' ) ? false : true ) : false  ))">
      </ng-multiselect-dropdown>

                <span *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length==1">Base Tab</span>
            </div>

            <!--display order-->
            <!-- <div class="item" style="padding: 10px" *ngIf="parentEntity.layout =='Column'">
                <span>
               <span *ngIf=" vProp.propertySelection !='Navigation Defined (Hide)' && parentEntity.layout=='Column'" [hidden]="checkDisableWithCat({reordering_to:'Previous'})" class="arrow-signs fa fa-chevron-left 3"  (click)="modelViewCreateScreen({reordering_to:'Previous' })"></span>
                  <span *ngIf=" vProp.propertySelection !='Navigation Defined (Hide)' && parentEntity.layout=='Column'" [hidden]="checkDisableWithCat({reordering_to:'Next'})" class="fa fa-chevron-right arrow-signs 4"  (click)="modelViewCreateScreen({reordering_to:'Next'})"></span>
                </span>
            </div> -->
            <!--/display order-->


            <!--required-->

            <div class="item {{(formViewShow || printoutShow || parentEntity.type == 'Printout (PO)') ?  'p-3' :''}}" *ngIf="(!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)') )&&((parentEntity.type=='Create (CV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) || (parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)' || parentEntity.layout == 'Grid')))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">
              <div *ngIf="vProp.property.required =='View Configured' && vProp.tier != 'Up' && vProp.tier != 'Down'">
          <div class="item 3 {{vProp.required}}" [ngClass]="vProp.property.required =='View Configured' ? 'dbp-0': 'p-3'">
            <!-- 3553 - Pick List entry cell standardization -->
            <!-- <select [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="required_{{itemIndex}}"  [(ngModel)]="vProp.required" class="form-control" #required="ngModel"  required
            [ngStyle]="{'color': (vProp.required == null || vProp.required == 'null' || vProp.required == '' ) ? '#acacac': '#555'}"
            [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Required) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.required == 'null' || vProp.required == null || vProp.required == '') ? 'errorsShow':'' ">
      <option disabled hidden value=null>Required (R)</option>
      <option *ngFor="let reqType of parentEntity.viewPropertyRequiredTypes" [value]="reqType">{{this.mainLayout.replaceUnderScore(reqType)}}</option>
     </select> -->

    <ng-multiselect-dropdown [msId]="'vpr133'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
      [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Required (R)'"
      [(ngModel)]="vProp.required"
      [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') ? true : false"
      [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Required) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.required == 'null' || vProp.required == null || vProp.required == '') ? 'errorsShowMultiSelect':'' " [data]="parentEntity.viewPropertyRequiredTypes" [isRelatedSelection]="true">
    </ng-multiselect-dropdown>

          </div>
          </div>
          <div *ngIf="vProp.property.required !='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
            <label title="{{this.mainLayout.replaceUnderScore(vProp.required)}}">
              {{this.mainLayout.replaceUnderScore(vProp.required)}}
            </label>
          </div>
            </div>
            <!--/required-->
            <!--editable-->
            <div class="item {{formViewShow || printoutShow || parentEntity.type == 'Printout (PO)' ?  'p-3' :''}}" *ngIf="(!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))|| parentEntity.type == 'Printout (PO)' ) )&&(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)'|| parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)' || parentEntity.layout == 'Grid'))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">
               <div *ngIf="vProp.property.editable =='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <div class="item 3" [ngClass]="vProp.property.required =='View Configured' ? 'dbp-0': 'p-3'">
                  <!-- 3553 - Pick List entry cell standardization -->
                  <!-- <select [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="allowEdit_{{itemIndex}}"  [(ngModel)]="vProp.allowEdit" class="form-control" #allowEdit="ngModel"   required
                  [ngStyle]="{'color': (vProp.allowEdit == null || vProp.allowEdit == 'null' || vProp.allowEdit == '' ) ? '#acacac': '#555'}"
                  [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Editable) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.allowEdit == 'null' || vProp.allowEdit == null || vProp.allowEdit == '') ? 'errorsShow':'' ">
            <option disabled hidden value=null>Editable (R)</option>
            <option disabled hidden value=''>Editable (R)</option>
            <option disabled hidden value='View Configured'>Editable (R)</option>
            <option *ngFor="let editType of parentEntity.viewPropertyEditableTypes" [value]="editType">{{this.mainLayout.replaceUnderScore(editType)}}</option>
          </select> -->

          <ng-multiselect-dropdown [msId]="'vpr135'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Editable (R)'" [(ngModel)]="vProp.allowEdit"
            [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') ? true : false"
            [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Editable) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.allowEdit == 'null' || vProp.allowEdit == null || vProp.allowEdit == '') ? 'errorsShowMultiSelect':'' "
            [data]="parentEntity.viewPropertyEditableTypes" [isRelatedSelection]="true">
          </ng-multiselect-dropdown>

                </div>
                </div>
                <div *ngIf="vProp.property.editable !='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <label class="centeraligh" >{{this.mainLayout.replaceUnderScore(vProp.allowEdit)}}</label>
                </div>
            </div>
            <!--/editable-->

            <!-- Allow Duplicate -->
            <div class="item {{vProp.property?.allowDuplicate == 'View Configured' ? 'p-3' : ''}} 1221 " *ngIf="(!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)') )&&(parentEntity.layout == 'Grid' || parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)'|| parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)' || (formViewShow && parentEntity.type=='Multi Record (MRV)')))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">
              <!-- 3553 - Pick List entry cell standardization -->
                <!-- <select *ngIf="vProp?.property?.allowDuplicate == 'View Configured'"
                [disabled]="parentEntity['viewType'] != 'Form' ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity['modelTableTypes'] != 'Standard' && parentEntity['modelTableTypes'] != 'Standard (Single Active)' && parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System':false : false))) : false"
                ngDefaultControl name="allowDuplicate0_{{itemIndex}}"
                [(ngModel)]="vProp.allowDuplicate" (change)="vProp.allowDuplicate == 'Yes' ? vProp.duplicateCheck = null : null"
                #allowDuplicate="ngModel"
                [required]="(vProp.property.allowDuplicate == 'View Configured')"
                class="form-control"
                [ngClass]="((vProp.required && (vProp.allowEdit && vProp.allowEdit !='Per View Design'))  && (vProp.required != 'null') && (vProp.allowDuplicate == null || vProp.allowDuplicate == '' || vProp.allowDuplicate == undefined || checkRedBorder(vProp,error_msg) ||  error_msg.indexOf(' (Allow Duplicate) is required') != -1) ) ? 'errorsShow':'' "
                [ngStyle]="{'color': (vProp.allowDuplicate == null || vProp.allowDuplicate == 'null' || vProp.allowDuplicate == '' || vProp.allowDuplicate == undefined) ? '#acacac': '#555'}">
                <option disabled hidden selected="selected" value="null">Allow Duplicate (R)</option>
                <option disabled hidden selected="selected" value=null>Allow Duplicate (R)</option>
                <option disabled hidden selected="selected" value="View Configured">Allow Duplicate (R)</option>
                <option *ngFor="let l of allowDuplicateTypes" [value]="l">{{mainLayout.replaceUnderScore(replaceModelFromNameColumn(l))}}</option>
              </select> -->

              <ng-multiselect-dropdown *ngIf="vProp?.property?.allowDuplicate == 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'" [msId]="'vpr137'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Allow Duplicate (R)'" [(ngModel)]="vProp.allowDuplicate"
                (ngModelChange)="(vProp.allowDuplicate == 'Yes' || vProp.allowDuplicate == null || vProp.allowDuplicate == undefined || vProp.allowDuplicate == 'null') ? vProp.duplicateCheck = null : null"
                [disabled]="(parentEntity['viewType'] != 'Form' ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity['modelTableTypes'] != 'Standard' && parentEntity['modelTableTypes'] != 'Standard (Single Active)' && parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System':false : false))) : false) ? true : false"
                [ngClass]="((vProp.allowDuplicate == null || vProp.allowDuplicate == '' || vProp.allowDuplicate == undefined) && (checkRedBorder(vProp,error_msg) ||  error_msg.indexOf(' (Allow Duplicate) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1)) ? 'errorsShowMultiSelect':'' "
                [data]="allowDuplicateTypes" [isRelatedSelection]="true">
              </ng-multiselect-dropdown>

              <label title="{{replaceModelFromNameColumn(vProp.allowDuplicate)}}" *ngIf="vProp.property.allowDuplicate != 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">{{replaceModelFromNameColumn(vProp.allowDuplicate)}}</label>
            </div>
            <!-- /Allow Duplicate -->

            <!-- Duplicate Check   -->
             <div class="item p-3 11 a"  *ngIf="(!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))|| parentEntity.type == 'Printout (PO)') )&&(parentEntity.type=='Create (CV)' || parentEntity.layout == 'Grid'  || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)'|| parentEntity.type=='Single Record (SRV)' || (formViewShow && parentEntity.type=='Multi Record (MRV)')))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">

              <!-- <ng-multiselect-dropdown [msId]="'vpr01'+'_'" class="rr-state"  *ngIf="((parentEntity['viewType'] == 'Form' ? (vProp?.allowDuplicate != 'Yes' || vProp.property?.allowDuplicate == 'View Configured') : (vProp?.allowDuplicate != 'Yes')) || (parentEntity['viewType'] != 'Form' ? (vProp?.allowDuplicate != 'Yes' && vProp.property?.allowDuplicate == 'View Configured')  : (vProp?.allowDuplicate != 'Yes'))) && vProp.allowDuplicate && vProp?.allowDuplicate != 'Yes'"
              [settings]="constantsModelView.dropdownSettings" [ngModelOptions]="{standalone: true}" [disabled]="vProp.property?.allowDuplicate != 'View Configured' && vProp?.allowDuplicate"
              [data]="duplicateCheckRecordStateTypes" [(ngModel)]="vProp.duplicateCheck" placeholder="Duplicate Check (R)" [ngClass]=" ((vProp.duplicateCheck == 'null' || vProp.duplicateCheck == null || vProp.duplicateCheck == '' || vProp.duplicateCheck.length == 0 ) ? 'errorsShowMultiSelect':'') "></ng-multiselect-dropdown> -->
              {{!(vProp?.allowDuplicate && vProp.property?.allowDuplicate == 'View Configured'    && vProp.tier != 'Up' && vProp.tier != 'Down' && vProp?.allowDuplicate != 'Yes') && vProp.duplicateCheck != 'null' ? vProp.duplicateCheck : ''}}
              <!-- {{parentEntity | json}} -->
              <!-- 3553 - Pick List entry cell standardization -->
              <!-- <select [(ngModel)]="vProp.duplicateCheck" ngDefaultControl name="DuplicateCheck{{itemIndex}}"
              class="form-control"
              *ngIf="vProp?.allowDuplicate && vProp.property?.allowDuplicate == 'View Configured' && vProp?.allowDuplicate != 'Yes'"
              [ngClass]=" ((vProp.duplicateCheck == 'null' || vProp.duplicateCheck == null || vProp.duplicateCheck == '' || vProp.duplicateCheck.length == 0 ) ? 'errorsShow':'') "
              [ngStyle]="{'color': (vProp.duplicateCheck == null || vProp.duplicateCheck == 'null' || vProp.duplicateCheck == '' || vProp.duplicateCheck == undefined) ? '#acacac': '#555'}">
              <option disabled hidden selected="selected" value="null">Duplicate Check (R)</option>
              <option disabled hidden selected="selected" value=null>Duplicate Check (R)</option>
              <option *ngFor="let editableTypes of duplicateCheckRecordStateTypes"
                [ngValue]="editableTypes">
                {{editableTypes}}
              </option>
            </select> -->

            <ng-multiselect-dropdown *ngIf="vProp?.allowDuplicate    && vProp.tier != 'Up' && vProp.tier != 'Down'&& (vProp.property?.allowDuplicate == 'View Configured' || vProp?.allowDuplicate == 'View Configured') && vProp?.allowDuplicate != 'Yes'"
              [msId]="'vpr114'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
              [placeholder]="'Duplicate Check (R)'" [(ngModel)]="vProp.duplicateCheck"
              [ngClass]=" ((vProp.duplicateCheck == 'null' || vProp.duplicateCheck == null || vProp.duplicateCheck == '' || vProp.duplicateCheck.length == 0 ) &&  (checkRedBorder(vProp,error_msg) ||  error_msg.indexOf(' (Duplicate Check) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1 )) ? 'errorsShowMultiSelect':'' "
              [data]="duplicateCheckRecordStateTypes" [isRelatedSelection]="true">
            </ng-multiselect-dropdown>

            </div>
            <!-- /Duplicate Check   -->
              <!--property Selection -->

                <!-- <div class="item p-3 11" *ngIf="vProp?.propertySelection == null && (parentEntity.type !=='Multi Record (MRV)' || parentEntity.layout == 'Grid'  )"> -->
                <!-- 3553 - Pick List entry cell standardization -->
                          <!-- <select [disabled]="parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System Plus':false : false))) : false" ngDefaultControl name="propertySelection0_{{itemIndex}}"
                    *ngIf="((vProp.allowEdit !='Per View Design'))  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null')  && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By')" [(ngModel)]="vProp.propertySelection"
                    (change)="onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)" #propertySelection="ngModel" [required]="(vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)')" class="form-control"
                    [ngClass]="((vProp.required && (vProp.allowEdit && vProp.allowEdit !='Per View Design'))  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined) ) ? 'errorsShow':'' "
                    [ngStyle]="{'color': (vProp.propertySelection == null || vProp.propertySelection == 'null' || vProp.propertySelection == '' || vProp.propertySelection == undefined) ? '#acacac': '#555'}">
          <option *ngIf="vProp.propertySelection === null" disabled hidden value="null">Property Selection (R)</option>
          <option *ngIf="vProp.propertySelection === ''" disabled hidden value="">Property Selection (R)</option>
          <option *ngIf="vProp.propertySelection === undefined" disabled hidden value="undefined">Property Selection (R)</option>
          <option *ngFor="let l of vProp.propertySelectionTypes" [value]="l">{{this.mainLayout.replaceUnderScore(l)}}</option>
        </select>

        <ng-multiselect-dropdown
          *ngIf="((vProp.allowEdit !='Per View Design'))  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null')  && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By')  && (vProp.tier!='Up') && (vProp.tier!='Down')"
          [msId]="'vpr04'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="column-view-multiselect bottom-unset"
          [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
          [(ngModel)]="vProp.propertySelection" (onSelect)="onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)" (onDeSelect)="onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
          [disabled]="(parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System Plus':false : false))) : false) ? true : false"
          [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined || vProp.propertySelection == 'null') ) ? 'errorsShowMultiSelect':'' ,(parentEntity.layout=='Column' ) ? 'property_selection ': '']"
          [data]="vProp.propertySelectionTypes" [isRelatedSelection]="true">
        </ng-multiselect-dropdown>

            </div>  -->
            <!-- <div class="item p-3 232" *ngIf="(vProp?.propertySelection != null||vProp?.propertySelection != '') && (parentEntity.type !='Multi Record (MRV)')">
              <span (click)="vProp.isNavigationExist ? shownavigationdata(vProp.isNavigationExist) : '' ">

              <ng-multiselect-dropdown [msId]="'vpr118'+'_'+VTabIndex+'_'+itemIndex" *ngIf="(vProp.allowEdit !='Per View Design')  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By')"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
                  [(ngModel)]="vProp.propertySelection" [ngModelOptions]="{standalone: true}" class="column-view-multiselect bottom-unset"
                  (onSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
                  (onDeSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
                  [disabled]="((parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null  ? (vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File') ? vProp.category != 'User Created'? vProp.category != 'System Plus':false: false) : false) || vProp.isNavigationExist == true) ? true : false"
                  [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined || vProp.propertySelection == 'null') ) ? 'errorsShowMultiSelect':'' ]"
                  [data]="vProp.propertySelectionTypes" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>

              </span>
            </div> -->
            <div class="item p-3 22" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))   || parentEntity.type == 'Printout (PO)') )&&((parentEntity.type !=='Multi Record (MRV)' || parentEntity.layout == 'Grid'  ))">
            <span (click)="vProp.isNavigationExist ? shownavigationdata(vProp.isNavigationExist) : '' ">
              <!-- 3553 - Pick List entry cell standardization -->
                          <!-- <select  [disabled]="(parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null  ? (vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File') ? vProp.category != 'User Created'? vProp.category != 'System Plus':false: false) : false) || vProp.isNavigationExist == true" ngDefaultControl name="propertySelection_{{itemIndex}}" *ngIf="(vProp.allowEdit !='Per View Design')  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By')" [(ngModel)]="vProp.propertySelection"
                  (change)="onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)" #propertySelection="ngModel" [required]="(vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)')" class="form-control"
                  [ngClass]="((vProp.required && (vProp.allowEdit && vProp.allowEdit !='Per View Design'))  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined) ) ? 'errorsShow':'' "
                  [ngStyle]="{'color': (vProp.propertySelection == null || vProp.propertySelection == 'null' || vProp.propertySelection == '' || vProp.propertySelection == undefined) ? '#acacac': '#555'}"
                  (click)="shownavigationdata(vProp.isNavigationExist)"  (mouseover)="onMouseMove()">
        <option disabled hidden value="">Property Selection (R)</option>
        <option *ngFor="let l of vProp.propertySelectionTypes" [value]="l">{{this.mainLayout.replaceUnderScore(l)}}</option>
      </select> -->
      @if (parentEntity.type != 'Printout (PO)') {
     <ng-multiselect-dropdown [msId]="'vpr119'+'_'+VTabIndex+'_'+itemIndex" *ngIf="(vProp.allowEdit !='Per View Design')  && (((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)')||(vProp.type=='Related' || vProp.type=='Related (Multiselect)')) && vProp.required != 'null') && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By' && vProp.displayName != 'Last Edited By' && vProp.displayName != 'Created By') && (!(vProp.tier == 'Up' || vProp.tier == 'Down') && ((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)' ))"
        [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
        [(ngModel)]="vProp.propertySelection" [ngModelOptions]="{standalone: true}" class="column-view-multiselect bottom-unset"
        (onSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
        (onDeSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
        [disabled]="((parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null  ? (vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File') ? vProp.category != 'User Created'? vProp.category != 'System Plus':false: false) : false) || vProp.isNavigationExist == true) ? true : false"
        [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)'||(vProp.type=='Related' || vProp.type=='Related (Multiselect)')) && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined || vProp.propertySelection == 'null') ) ? 'errorsShowMultiSelect':'' ]"
        [data]="vProp.propertySelectionTypes" [isRelatedSelection]="true">
      </ng-multiselect-dropdown>
    }
      </span>
    </div>
        <!-- </div> -->
            <!--/property Selection -->
            <!--Look UP MRV-->
            <div class="item p-3 231" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)') )&&(parentEntity.type !=='Multi Record (MRV)' || parentEntity.layout == 'Grid')   ">
              <!-- 3591 Implementation in all application -->
              <ng-multiselect-dropdown *ngIf="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && parentEntity.type != 'Printout (PO)'"
              [required]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')"
                [msId]="'vpr128'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
                [placeholder]="'Property Look Up (R)'" (onSelect)="lookUPChanges(vProp.selectedMrv.id)"
                (onDeselect)="lookUPChanges(vProp.selectedMrv.id)" class="unset"
                [ngClass]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && (vProp.selectedMrv.id == null || vProp.selectedMrv.id == '' || vProp.selectedMrv.id == 'null') ? 'errorsShowMultiSelect':((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) ? 'column-view-multiselect': 'unset' "
                [data]="vProp.MrvLookup"
                [(ngModel)]="vProp.selectedMrv.id" [isRelatedSelection]="true"
                [disabled]="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' : false" >
              </ng-multiselect-dropdown>

              <span *ngIf="vProp.propertySelection !=='Look Up' "></span>
          </div>
          <!-- <div class="item p-3 243" *ngIf="parentEntity.type =='Multi Record (MRV)'">
            <ng-multiselect-dropdown *ngIf="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')"
            [required]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')"
              [msId]="'vpr129'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
              [placeholder]="'Property Look Up (R)'" (onSelect)="lookUPChanges(vProp.selectedMrv.id)"
              (onDeselect)="lookUPChanges(vProp.selectedMrv.id)" class="unset"
              [ngClass]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && (vProp.selectedMrv.id == null || vProp.selectedMrv.id == '' || vProp.selectedMrv.id=='null') ? 'errorsShowMultiSelect':((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) ? 'column-view-multiselect': 'unset' "
              [data]="vProp.MrvLookup"
              [(ngModel)]="vProp.selectedMrv.id" [isRelatedSelection]="true"
              [disabled]="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' : false">
            </ng-multiselect-dropdown>

            <span *ngIf="vProp.propertySelection !=='Look Up' "></span>
        </div> -->
          <!--/Look UP MRV-->
          <!-- 3553 - Pick List entry cell standardization -->
            <!--Related Dependency-->
         <!-- <div *ngIf="((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true )" class="item p-3">
         <div class="item p-3 p1" *ngIf="vProp.property && (vProp.property.type !=='Related' && vProp.property.type !=='Related (Multiselect)') && vProp?.relatedDependencyProperty && vProp?.relatedDependencyProperty?.length == 0">
         </div>
         <div class="item p-3 p2 2" *ngIf="vProp.property && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && parentEntity.type !=='Multi Record (MRV)'  && parentEntity.type !=='Single Record (SRV)' && !checkRelatedDependencyValid() && vProp?.relatedDependencyProperty?.length !== 0 && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true )">
           </div>
        <div class="item p-3 pname" style="border-right: none; padding: 0 !important;" *ngIf="vProp.property && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && checkRelatedDependencyValid() && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true )">
            <select *ngIf="vProp.relatedDependencyProperty?.length > 0 && getRelatedDependency().length > 0 && vProp.category =='User Created'" [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="allowEditRelatedDependency" #relatedDependency="ngModel"
              [(ngModel)]="vProp.relatedDependency" class="form-select select-enums"  [disabled]="vProp.propertySelection == 'Navigation Defined (Hide)'|| vProp.propertySelection ==='Navigation Defined (Display)' || editableq"
              [ngStyle]="{'color': (vProp.relatedDependency == null || vProp.relatedDependency == 'null' || vProp.relatedDependency == '' || vProp.relatedDependency == undefined) ? '#acacac': '#555'}"
              (change)="getDependencyProperty(vProp)">
              <option  value=null>Related Dependency </option>
              <option *ngFor="let l of getRelatedDependency()" [ngValue]="l.id !=null ? l.id : l.viewPropertyId">{{this.mainLayout.replaceUnderScore(l.displayName)}}</option>
            </select>
        </div> -->
        <!-- for #2826 no need for MRV,MRV & SRV , SRV -->
      <!-- <div class="item p-3 testst" *ngIf="(parentEntity.type =='Multi Record (MRV)'  || parentEntity.type =='Single Record (SRV)') && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true ) && vProp.relatedDependencyProperty?.length>0">
        <select *ngIf="vProp.relatedDependencyProperty?.length > 0 && getRelatedDependency().length > 0 && vProp.category =='User Created'" [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="allowEditRelatedDependency" #relatedDependency="ngModel"
          [(ngModel)]="vProp.relatedDependency" (ngModelChange)="onSelectRelatedDependency()" class="form-select select-enums"  [disabled]="vProp.propertySelection == 'Navigation Defined (Hide)'|| vProp.propertySelection ==='Navigation Defined (Display)' || editableq"
          [ngStyle]="{'color': (vProp.relatedDependency == null || vProp.relatedDependency == 'null' || vProp.relatedDependency == '' || vProp.relatedDependency == undefined) ? '#acacac': '#555'}">
          <option  value=null>Related Dependency</option>
          <option *ngFor="let l of getRelatedDependency()" [ngValue]="l.id !=null ? l.id : l.viewPropertyId">{{this.mainLayout.replaceUnderScore(l.displayName)}}</option>
        </select>
      </div> -->
     <!-- </div> -->
     <!-- added -->
     <!-- <div *ngIf=" ((this.parentEntity['modelTableTypes'] != 'Schedule Record' && this.parentEntity['modelTableTypes'] != 'Schedule Design'  && this.parentEntity['modelTableTypes'] != 'File'
     && this.parentEntity['modelTableTypes'] != 'Schedule Calendar') && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category !='User Created' : false )) && !formViewShow" class="item p-3 tu666">
      <div style="border: none;" class="item p-3 p1" >
        </div>
        </div> -->
      <!--/Related Dependency-->
     <!-- <div *ngIf="((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category !='User Created' : false )" class="item p-3 tu777 1">
      <div style="border: none;" class="item p-3 p" >
        </div>
        </div> -->
      <!--/Dependency property-->

      <!-- 3553 - Pick List entry cell standardization -->
         <!--property pick list-->
         <!-- <div class="item p-3" *ngIf="(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV) & Multi Record (MRV)')  ">
<div *ngIf="vProp.pickListTable?.id == null">
          <select [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="pickListTable_n_0_{{itemIndex}}" #pickListTable_id="ngModel" #pickListTable="ngModel" [ngModel]="vProp.pickListTable?.id" class="form-select select-enums" *ngIf=" vProp.property.type == 'Pick List' || vProp.property.type == 'Pick List (Multiselect)' "
          [ngStyle]="{'color': (vProp.pickListTable?.id == null || vProp.pickListTable?.id == 'null' || vProp.pickListTable?.id == '' || vProp.pickListTable?.id == undefined) ? '#acacac': '#555'}"
              [required]="(vProp.property.type == 'Pick List' || vProp.property.type == 'Pick List (Multiselect)')  && (parentEntity.type == constantsModelView.ViewType_CreateView || parentEntity.type == constantsModelView.ViewType_CreateViewAndSingleRecord
               || parentEntity.type == this.constantsModelView.ViewType_CreateViewAndMrvSrvRecord)"
              (change)="onChange_PickListTable(vProp, $event)"  [ngClass]="(parentEntity.layout =='Column' ? '' : (vProp.pickListTable?.id == null || vProp.pickListTable?.id == '' || vProp.pickListTable?.id == undefined ) ) ? 'errorsShow':'' "
              [ngStyle]="{'color': (vProp.pickListTable?.id == null || vProp.pickListTable?.id == 'null' || vProp.pickListTable?.id == '' || vProp.pickListTable?.id == undefined) ? '#acacac': '#555'}">
    <option disabled hidden value="null" selected>Property Pick List (R)</option>
    <option *ngFor="let l of vProp.pickListTables" [value]="l.id">{{replaceAllUnderScore(l.name)}}</option>
  </select>
</div>
<div *ngIf="vProp.pickListTable?.id != null">
  <select [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="pickListTable_name_{{itemIndex}}"  [ngModel]="vProp.pickListTable?.id" class="form-select select-enums" *ngIf=" vProp.property.type == 'Pick List' || vProp.property.type == 'Pick List (Multiselect)' "
  [ngStyle]="{'color': (vProp.pickListTable?.id == null || vProp.pickListTable?.id == 'null' || vProp.pickListTable?.id == '' || vProp.pickListTable?.id == undefined) ? '#acacac': '#555'}"
      [required]="(vProp.property.type == 'Pick List' || vProp.property.type == 'Pick List (Multiselect)')  && (parentEntity.type == constantsModelView.ViewType_CreateView || parentEntity.type == constantsModelView.ViewType_CreateViewAndSingleRecord || parentEntity.type == this.constantsModelView.ViewType_CreateViewAndMrvSrvRecord)"
      (change)="onChange_PickListTable(vProp, $event)" [ngStyle]="{'color': (vProp.pickListTable?.id == null || vProp.pickListTable?.id == 'null' || vProp.pickListTable?.id == '' || vProp.pickListTable?.id == undefined) ? '#acacac': '#555'}">
<option disabled hidden value="" selected>Property Pick List (R) --  </option>
<option *ngFor="let l of vProp.pickListTables" [value]="l.id">{{replaceAllUnderScore(l.name)}}</option>
</select>
</div>
          <span *ngIf=" vProp.property.type != 'Pick List' && vProp.property.type != 'Pick List (Multiselect)' "></span>
      </div> -->
      <!--/property pick list-->
            <!--Hyperlink View-->
            <div class="item p-3 p2 1" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&(((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)') )&&(parentEntity.type != 'Create (CV)' || parentEntity.layout == 'Grid') && parentEntity.type != 'Multi Record (MRV)'">
               <div *ngIf="(vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && parentEntity.type != 'Printout (PO)' ">
                  <!-- 3591 Implementation in all application -->
                  <ng-multiselect-dropdown [ngClass]="((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) ? '': 'unset'" [msId]="'vpr108'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="singleSelectPlaceholderForHyperLink(vProp.relatedNavigationModelView.id, 'Hyperlink View')" [isBlankRowShow]="isBlankRowShow"
                  (onSelect)="onChange_NavigationModelView_Related(vProp, $event)"
                  (onDeselect)="onChange_NavigationModelView_Related(vProp, $event)"
                  [data]="vProp.hyperLinkViews" [(ngModel)]="vProp.relatedNavigationModelView.id" [isRelatedSelection]="true"
                  [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')">
                </ng-multiselect-dropdown>

                </div>
                <div *ngIf=" vProp.property.type !=='Related' && vProp.property.type !=='Related (Multiselect)'"></div>
            </div>
            <!--/Hyperlink View-->

            <!--master sort-->
<!-- <div class="item p-3 6" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&(parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) )&&(parentEntity.type=='Multi Record (MRV)' && parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))"> -->
  <!-- 3553 - Pick List entry cell standardization -->
                <!-- <select [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active Incomplete')" ngDefaultControl name="masterSort" #masterSort="ngModel" [ngModelOptions]="{ standalone: true }"
                [(ngModel)]="vProp.masterSort" class="form-control select-enums" (change)="onChange_MasterSort(vProp)"
                *ngIf="(parentEntity.modelTable_id==vProp.selectedModelTableId) || formViewShow" [disabled]=""
                [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Master Sort is required for at least one record') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                   (vProp.masterSort == 'null' || vProp.masterSort == null || vProp.masterSort == '' || vProp.masterSort == undefined ) ? 'errorsShow':'' "
                   [ngStyle]="{'border' : setSortableBorder(vProp) && (vProp.masterSort == null || vProp.masterSort == 'null' || vProp.masterSort == ''), 'color': (vProp.masterSort == null || vProp.masterSort == 'null' || vProp.masterSort == '' || vProp.masterSort == undefined) ? '#acacac': '#555' }">
          <option disabled hidden [value]=null>Master Sort (R)</option>
          <option *ngFor="let l of lookupSortDirection" [ngValue]="l['Text']">{{this.mainLayout.replaceUnderScore(l['Text'])}}</option>
        </select> -->

        <!-- <ng-multiselect-dropdown [msId]="'vpr134'+'_'+VTabIndex+'_'+itemIndex" *ngIf="((parentEntity.modelTable_id==vProp.selectedModelTableId) || formViewShow) && vProp.property.type !=='Related (Multiselect)'"
          [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Master Sort (R)'"
          [(ngModel)]="vProp.masterSort" [ngModelOptions]="{standalone: true}"
          (onSelect)="onChange_MasterSort(vProp)" (onDeSelect)="onChange_MasterSort(vProp)"
          [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active Incomplete') ? true : false"
          [ngClass]="(error_msg !== undefined && error_msg.length>0) &&
                   (vProp.masterSort === 'null' || vProp.masterSort === null || vProp.masterSort === undefined || vProp.masterSort.trim() === '') ? 'errorsShowMultiSelect':'' "
          [data]="lookupSortDirection" [isRelatedSelection]="true">
        </ng-multiselect-dropdown>

            </div> -->
            <!--/master sort-->
       <!-- Related Record State(s) -->
        <div class="item p-3 7" *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&((parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.type == 'Printout (PO)') )">
        <!-- *ngIf="(parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)')" -->
        <span *ngIf="!((vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1)&&(parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) )&&((vProp.type == 'Related (Multiselect)' || vProp?.property?.type == 'Related (Multiselect)') && parentEntity.type != 'Create (CV)')">
               <!-- <ng-container *ngIf="vProp.category =='User Created'"> -->
              <ng-multiselect-dropdown [msId]="'vpr136'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Select (R)'" class="rr-state"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode"  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
            [data]="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') && (vProp.tier == 'Up' || vProp.tier == 'Down') ? relatedRecordStateForUpAndDownTable :relatedRecordStateForViewsTable" [(ngModel)]="vProp.relatedRecordStates"
            [ngClass]="[(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                   (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] " [isRelatedSelection]="true"></ng-multiselect-dropdown>
                  <!-- </ng-container> -->
                  <!-- <ng-container *ngIf="vProp.category !='User Created'"> -->
                    <!-- <select class="rr-state" disabled  [(ngModel)]="vProp.relatedRecordStates" class="form-control"
                      [ngClass]="(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                              (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'' ">
                      <option [selected]="true" value="Active">Active</option>
                    </select> -->
<!--
                    <ng-multiselect-dropdown [msId]="'vpr099'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Select (R)'"
                      [disabled]="!inEditMode"  class="rr-state max-select-height" [settings]="constantsModelView.dropdownSettingsForRelatedRecordState"
                      [ngModelOptions]="{standalone: true}" [data]="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') && (vProp.tier == 'Up' || vProp.tier == 'Down') ? relatedRecordStateForUpAndDownTable :relatedRecordStateForViewsTable" [(ngModel)]="vProp.relatedRecordStates"
                      [ngClass]="[(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                      (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'', parentEntity.layout=='Column' ? '' : 'unset',(parentEntity.layout==constantsModelView.Layout_Vertical && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :'' ]"
                      [isRelatedSelection]="true">
                    </ng-multiselect-dropdown>

                  </ng-container> -->
        </span>
        <span *ngIf="vProp.type != 'Related (Multiselect)' "></span>
        </div>
        <!-- /Related Record State(s) -->

        <!-- Record Displayed -->
            <div class="item p-3 isit" *ngIf="((parentEntity?.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || !(vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1 || vProp?.isStaticImage || vProp?.isStaticText))  && (parentEntity.type=='Multi Record (MRV)' || parentEntity.type == 'Printout (PO)' || parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord || formViewShow)">
              <div *ngIf="((vProp.selectedModelTableRelationType ==constantsModelView.OneToMany || vProp.selectedModelTableRelationType ==constantsModelView.MathematicalOneToMany) || vProp.tier =='Down') && parentEntity.type=='Multi Record (MRV)' && !formViewShow">
                <ng-multiselect-dropdown class="unset setheight" [msId]="'vpr138'+'_'+VTabIndex+'_'+itemIndex"
                 (onSelect)="onSelect();selectRecordsDisplayed($event,'Select',vProp);" [disabled]="!inEditMode && !vProp.recordDisplayState" [ngClass]="((error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == []))  ? 'errorsShowMultiSelect':'' "
                 [settings]="constantsModelView.dropdownSettings"  [ngModelOptions]="{standalone: true}" (onDeSelect)="OnItemDeSelect($event);selectRecordsDisplayed($event,'Deselect',vProp);"
                 [data]="(vProp.dropDownValue == '3' ? RecordDisplayQualifierTypeForAll : (vProp.dropDownValue == '1') ? RecordDisplayQualifierTypeForLastCreatedActive : (vProp.dropDownValue == '4') ? RecordDisplayQualifierTypeForLastCreatedArchived :(vProp.dropDownValue == '5') ? RecordDisplayQualifierTypeForLastEditedActive : (vProp.dropDownValue == '6') ? RecordDisplayQualifierTypeForLastEditedArchived : RecordDisplayQualifierTypes())"  [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)"  [(ngModel)]="vProp.recordDisplayQualifier" [recordsDisplayedDropdown]="true" (onDeSelectAll)="onDeSelectAll($event)" (onSelectAll)="onSelectAll($event)"  [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
                 </div>
                 <div *ngIf="((vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') || vProp.tier == 'Down') &&( parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord || parentEntity.type == 'Printout (PO)' || formViewShow) || (formViewShow && (vProp?.property?.id != null && vProp?.propertyType == 'Down Table Properties'))">

                  <ng-multiselect-dropdown [msId]="'vpr139'+'_'" *ngIf="(parentEntity.layout !='Row' && !(parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))" class="column-view-multiselect setheight"
                   (onSelect)="onSelect();selectRecordsDisplayed($event,'SelectSRV',vProp);" [disabled]="(parentEntity.type == 'Printout (PO)' || formViewShow) ?  !inEditMode : (!inEditMode && !vProp.recordDisplayState)" [ngClass]="((error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == []))  ? 'errorsShowMultiSelect':'' "
                   [settings]="constantsModelView.dropdownSettingsForRelatedTableV1"  [ngModelOptions]="{standalone: true}" (onDeSelect)="OnItemDeSelect($event);selectRecordsDisplayed($event,'DeselectSRV',vProp);"
                   [data]="RecordDisplayQualifierTypeForSRV" [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)" [(ngModel)]="vProp.recordDisplayQualifier" [recordsDisplayedDropdown]="true" (onDeSelectAll)="onDeSelectAll($event)" (onSelectAll)="onSelectAll($event)"  [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
                   <ng-multiselect-dropdown [msId]="'vpr140'+'_'" *ngIf="(parentEntity.layout =='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))"
                   (onSelect)="onSelect();selectRecordsDisplayed($event,'SelectSRV',vProp);" [disabled]="!inEditMode" [ngClass]="((error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == []))  ? 'errorsShowMultiSelect':'' "
                   [settings]="constantsModelView.dropdownSettingsForRelatedTableV1"  [ngModelOptions]="{standalone: true}" (onDeSelect)="OnItemDeSelect($event);selectRecordsDisplayed($event,'DeselectSRV',vProp);"
                   [data]="RecordDisplayQualifierTypeForSRV" [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)" [(ngModel)]="vProp.recordDisplayQualifier" [recordsDisplayedDropdown]="true" (onDeSelectAll)="onDeSelectAll($event)" (onSelectAll)="onSelectAll($event)"  [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
                   </div>
                <span *ngIf="vProp.selectedModelTableRelationType !=='One to Many' "></span>
            </div>
        <!-- /Record Displayed -->

            <!-- Record Presentation-->
            <div class="item p-3 aa"
              *ngIf="(parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || (parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))">
              <div *ngIf="(vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') ">
                <ng-multiselect-dropdown [msId]="'vpr142'+'_'+VTabIndex+'_'+itemIndex"
                  [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' ||  !vProp.recordPresentationState) ? true : false"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Record Presentation (R)'"
                  class="max-select-height" [(ngModel)]="vProp.recordPresentation" [ngModelOptions]="{standalone: true}"
                  (onSelect)="setRecordPresentation(parentContainer,vProp.tierBaseId,vProp.recordPresentation)"
                  (onDeSelect)="setRecordPresentation(parentContainer,vProp.tierBaseId,vProp.recordPresentation)"
                  [data]="recordPresentations" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>
              <span *ngIf="vProp.selectedModelTableRelationType !=='One to Many' "></span>
            </div>
            <!-- /Record Presentation-->

            <!--record model view-->
            <div class="item p-3 bb"
              *ngIf="((parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || (parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))) && showRecordViewInput(vProp)">
              <div
                *ngIf="(vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') ">
                <ng-multiselect-dropdown *ngIf="vProp?.recordViewsData"
                  [msId]="'vpr125'+'_'+VTabIndex+'_'+itemIndex"
                  [disabled]="((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ( isCreate?  vProp.id ==null ? !enableRecordView :!inEditMode :(!showRecordView)) || (parentEntity.modelTable_id==vProp.selectedModelTableId || ( isCreate?  vProp.id ==null ? !enableRecordView :!inEditMode :(!showRecordView)))) ? true : false"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Record View (R)'"
                  [(ngModel)]="vProp.recordView" [ngModelOptions]="{standalone: true}"
                  class="column-view-multiselect"
                  [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||
                                    error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShowMultiSelect':'' "
                  [data]="vProp.recordViewsData" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>
              <span *ngIf="vProp.selectedModelTableRelationType !=='One to Many' "></span>
            </div>
            <div class="item p-3 cc "
              *ngIf="((parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || (parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))) && !showRecordViewInput(vProp)">

              <div
                *ngIf="(vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') ">
                <select [disabled]="true" ngDefaultControl name="parentContainer_navigationModelView_id"
                  #parentContainer_navigationModelView_id="ngModel" [ngModel]="vProp.recordView"
                  (change)="vProp.navigationModelView.id = parentContainer_navigationModelView_id.value;setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex);"
                  class="form-select ng-untouched ng-pristine" [ngStyle]="{'color': '#555'}"
                  [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||
                                  error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShow':'' ">
                  <option disabled hidden value=null>Record View (R)</option>
                  <option [value]="vProp.navigationModelView?.id" selected>
                    {{this.mainLayout.replaceUnderScore(getRecordViewName(vProp,vProp.navigationModelView?.id))}}</option>
                </select>
              </div>
              <span *ngIf="vProp.selectedModelTableRelationType !=='One to Many' "></span>
            </div>
            <!--/ record model view-->
            <!-- Tier Base Id -->
            <div class="item p-3 dd" *ngIf="parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ">
               <span>{{this.mainLayout.replaceUnderScore(vProp.tierBaseId)}}</span>
            </div>
            <!-- /Tier Base Id -->
            <!-- complex Column Base ID -->
            <div class="item p-3 ee" *ngIf="parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ">
                <span>{{this.mainLayout.replaceUnderScore(vProp.complexColumnBaseId)}}</span>
            </div>
            <!-- /complex Column Base ID -->

            <!-- Font Type (Display Name) -->
            <div class="item p-3 12r" *ngIf="(vProp?.isShowDisplayName && (parentEntity.type == 'Printout (PO)' || printoutShow))">
              <span>
                <ng-multiselect-dropdown [msId]="'vpr143'+'_'+VTabIndex+'_'+itemIndex"
                  [placeholder]="'Font Type (Display Name) (R)'" (onSelect)="onChangeDropDownEmit()"
                  (onDeSelect)="onChangeDropDownEmit()" [settings]="constantsModelView.dropdownSettingsForFontType"
                  [disabled]="!inEditMode" class="rr-state" [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
                  [data]="pickListData[0]?.fontTypeDisplayName" [(ngModel)]="vProp.fontTypeDisplayName"
                  [ngClass]="[(error_msg.indexOf('Please fill the required values') != -1) &&
                               (vProp.fontTypeDisplayName == 'null' || vProp.fontTypeDisplayName == null) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Type (Value) -->
            <div class="item p-3 12q"
              *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
              <span *ngIf="vProp.type!='Text (Rich)'&&(isShowFontFormatValue || vProp?.isFontTypeValueShow)">
                <ng-multiselect-dropdown [msId]="'vpr145'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Type (Value) (R)'"
                  (onSelect)="onChangeDropDownEmit()" [settings]="constantsModelView.dropdownSettingsForFontType"
                  [disabled]="!inEditMode" class="rr-state" [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
                  [data]="pickListData[0]?.fontTypeValue" [(ngModel)]="vProp.fontTypeValue" (onDeSelect)="onChangeDropDownEmit()"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                                (vProp.fontTypeValue == 'null' || vProp.fontTypeValue == null || vProp.fontTypeValue == '' || vProp.fontTypeValue.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Size (Display Name) -->
            <div class="item p-3 1p2"
              *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
              <span *ngIf="vProp?.isShowDisplayName">
                <ng-multiselect-dropdown [msId]="'vpr147'+'_'+VTabIndex+'_'+itemIndex"
                  [placeholder]="'Font Size (Display Name) (R)'"
                  [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" class="rr-state"
                  (onSelect)="onChangeDropDownEmit()" [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
                  [data]="pickListData[0]?.fontSizeDisplayName" [(ngModel)]="vProp.fontSizeDisplayName"
                  (onDeSelect)="onChangeDropDownEmit()"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1&&
                                (vProp.fontSizeDisplayName == 'null' || vProp.fontSizeDisplayName == null || vProp.fontSizeDisplayName == '' || vProp.fontSizeDisplayName.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Size (Value) -->
            <div class="item p-3 12o"
              *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
              <span *ngIf="vProp.type!='Text (Rich)'&& isShowFontFormatValue">
                <ng-multiselect-dropdown [msId]="'vpr149'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Size (Value) (R)'"
                  (onSelect)="onChangeDropDownEmit()" (onDeSelect)="onChangeDropDownEmit()"
                  [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" class="rr-state"
                  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="pickListData[0]?.fontSizeValue"
                  [(ngModel)]="vProp.fontSizeValue"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                          (vProp.fontSizeValue == 'null' || vProp.fontSizeValue == null || vProp.fontSizeValue == '' || vProp.fontSizeValue.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Color (Display Name) -->
            <div class="item p-3 12n">
              <span *ngIf="vProp.displayName && vProp.displayName?.trim()!=''&&vProp.displayName != null&&vProp?.isShowDisplayName">
                <ng-multiselect-dropdown [msId]="constantsModelView.msIdForFontColorLabel+'_'+VTabIndex+'_'+itemIndex"
                  [placeholder]="constantsModelView.fontColorPHForLabel" (onSelect)="onChangeDropDownEmit()" (onDeSelect)="onChangeDropDownEmit()"
                  [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" class="rr-state"
                  [ngModelOptions]="{standalone: true}" [data]="pickListData[0]?.fontColorDisplayName"
                  [(ngModel)]="vProp.fontColorDisplayName"
                  (ngModelChange)="fontFormatListModification(vProp,vProp.fontFormatDisplayName)"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                                      (vProp.fontColorDisplayName == constantsModelView.null || vProp.fontColorDisplayName == null) ? 'errorsShowMultiSelect':''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Color (Value) -->
            <div class="item p-3 13m">
              <span *ngIf="vProp?.showColorValue" >
                <ng-multiselect-dropdown  [msId]="constantsModelView.msIdForFontColorValue +'_'+VTabIndex+'_'+itemIndex"
                  [placeholder]="constantsModelView.fontColorPHForValue" class="rr-state" (onDeSelect)="onSelectFontColor(vProp.fontColorValue);onChangeDropDownEmit()"
                  [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="(!inEditMode || (isReadOnlyEntryCellColor || vProp?.isReadOnlyFontColorValue))"
                  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="vProp.fontColorValueList"
                  [(ngModel)]="vProp.fontColorValue" (onSelect)="onSelectFontColor(vProp.fontColorValue);onChangeDropDownEmit()"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                                      (vProp.fontColorValue == constantsModelView.null || vProp.fontColorValue == null) ? 'errorsShowMultiSelect':''] " [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>
            <!-- Font Format (Display Name) -->
            <div class="item p-3 14l">
              <span *ngIf="vProp.displayName?.trim()!=''&&vProp.displayName != null&&vProp?.isShowDisplayName">
                <ng-multiselect-dropdown [msId]="constantsModelView.msIdForFontFormatLabel+'_'+itemIndex"
                  [placeholder]="constantsModelView.fontFormatPHForLabel" class="rr-state" [component]="'view_Recursive'"
                  [settings]="constantsModelView.dropdownSettingsForFontFormat" [disabled]="!inEditMode"
                  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="vProp.fontFormatDisplayNameList"
                  [(ngModel)]="vProp.fontFormatDisplayName" [notExpand]="true"
                  (onSelect)="fontFormatListModification(vProp,vProp.fontFormatDisplayName,constantsModelView.fromLabel)"
                  (onDeSelect)="fontFormatListModification(vProp,vProp.fontFormatDisplayName,constantsModelView.fromLabel)"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 && (vProp.fontFormatDisplayName == constantsModelView.null || vProp.fontFormatDisplayName == null || vProp.fontFormatDisplayName.length == 0) ? 'errorsShowMultiSelect':''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Font Format (Value) -->
            <div class="item p-3 15k">
              <span *ngIf="isShowFontFormatValue">
                <ng-multiselect-dropdown [msId]="constantsModelView.msIdForFontFormatValue+'_'+itemIndex"
                  [placeholder]="constantsModelView.fontFormatPH" class="rr-state"
                  [settings]="constantsModelView.dropdownSettingsForFontFormat" [disabled]="!inEditMode" [component]="'view_Recursive'"
                  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [notExpand]="true"
                  [data]="vProp.fontFormatValueList" [(ngModel)]="vProp.fontFormatValue"
                  (onSelect)="fontFormatListModification(vProp,vProp.fontFormatValue,constantsModelView.fromValue)"
                  (onDeSelect)="fontFormatListModification(vProp,vProp.fontFormatValue,constantsModelView.fromValue)"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 && (vProp.fontFormatValue == constantsModelView.null || vProp.fontFormatValue == null || vProp.fontFormatValue.length == 0 ) ? 'errorsShowMultiSelect':''] "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </span>
            </div>
            <!-- Entry Cell Color -->
            <div class="item p-3 15j"
              *ngIf="((vProp.propertyType == 'Table Property'|| vProp.propertyType =='Up Table Property' ||vProp.propertyType == 'Non Table Property (Non Related)'||vProp.propertyType == 'Non Table Property (Related)' || vProp.propertyType == 'Multiselect Table Property' || vProp.propertyType == 'Down Table Property' || vProp.propertyType == null || vProp.propertyType != null ||  vProp.propertyType == '' || vProp.selectedModelTableId) && !printoutShow) && ((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || vProp?.isEntryCellShow)">
              <span *ngIf="vProp?.isEntryCellShow">
                <ng-multiselect-dropdown
                  [msId]="constantsModelView.msIdForEntryCellColor+'_'+VTabIndex+'_'+itemIndex"
                  [placeholder]="'Entry Cell Color (R)'" class="rr-state"
                  [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode || isReadOnlyEntryCellColor"
                  [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="vProp.entryCellColorList"
                  [(ngModel)]="vProp.entryCellColor"
                  (onDeSelect)="onChangeDropDownEmit()" (onSelect)="onChangeDropDownEmit()"
                  [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 && (vProp.entryCellColor == constantsModelView.null || vProp.entryCellColor == null) ? 'errorsShowMultiSelect':''] "
                  [isRelatedSelection]="true" >
                </ng-multiselect-dropdown>
              </span>
            </div>

            <!-- Read Entry cell representation in column view for visualizing purpose-->
            <div class="item p-3 15i"
              *ngIf="(parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))">
                <input type="text" [style]="vProp?.fontStylingForValue"  [value]="readOnlyEntryCellValue"
                  class="form-control 1212" autocomplete="off" placeholder="[preview]" disabled />
            </div>


        </ng-container>
        <!--/Edit Mode Region-->
        <!--Read only mode-->

        <ng-container *ngIf="!vProp.active || !inEditMode && (vProp.viewProperties == null || vProp.viewProperties.length == 0) && vProp.type !== constantsModelView.ViewPropertyType_Base">
            <!--item header -->
            <!-- <div class="item col-width " *ngIf="parentEntity.layout=='Column' && vProp.id" style="border-right: 0;height: 45px;"> -->
              <!-- <div class="item col-width {{ formViewShow ? 'vpr-cog-icon' : '' }} " *ngIf="parentEntity.layout=='Column' && vProp.id" style="border-right: 0;" [ngStyle]="{'height': formViewShow ? '45px' : '45px' }"> -->
                <div class="item col-width 1 " *ngIf="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && vProp.id" style="border-right: 0;" [ngStyle]="{'height': formViewShow ? '45px' : '45px' }">
                <div *ngIf="vProp.id" class=" text-center text" style="position: relative;">
                  <input *ngIf="vProp.id && parentEntity.type == constantsModelView.ViewType_MultiRecord" type="checkbox" [checked]="vProp['display'] == 'checked'" (change)="setCheckUnCheck(vProp,parentEntity,vProp['display'])" /> 
                  <span *ngIf="vProp.id && ((((this.parentEntity['modelTableTypes'] != 'File') || vProp.displayName =='Individual Form Name'||(this.parentEntity['modelTableTypes'] == 'File' && (vProp.category == 'System' || vProp.category == 'User Created')))) || (this.parentEntity['modelTableTypes'] == 'File' && mrvLayout ) || (isScheduleTable && !mrvLayout))"   [ngClass]="vProp.id=='00000000-0000-0000-0000-000000000000' ? 'disableCog' : '' " class="fa fa-cog icon-width-18 setGearIconCentre d" [ngStyle]="{'color':( vProp?.recordState == 'Active' || vProp?.recordState == 'Active (Incomplete)') ? '#4b809b' : 'red', 'pointer-events': vProp?.id=='00000000-0000-0000-0000-000000000000' ? 'none' : true ,'opacity': vProp?.id=='00000000-0000-0000-0000-000000000000' ? '0.5' : '1' }" (click)="displayNameId=vProp.id; changeIdCogIcon()"></span>
                    <div class="dropdown row-menu" *ngIf="(recordIdCogIcon==vProp.id && (!last || parentEntity.viewTabs[activeTabIndex].viewProperty.length == 1))" (mouseleave)="displayNameId='';changeIdCogIcon()" style="position:absolute">
                      <ul class="dropdown-menu row-menu" style="display: block;min-width: 50px;top: -2px;padding: 0px 0;left: 15px;margin:0">

                        <li [ngClass]="mainLayout.checkIsRecordLock(modelTableNameForRecordLock, (formViewShow ? formViewId : parentEntity.table)) != false ? 'wrapper' : '' " [title]="mainLayout.checkIsRecordLock(modelTableNameForRecordLock, (formViewShow ? formViewId : parentEntity.table)) != false ? mainLayout.recordLockedByUserName + ' is currently editing the record.' : '' ">
                          <ul class="pointer-events-none" style="list-style: none;padding:0px;font-weight: normal !important;">
<!-- && vProp.category == 'User Created'&&  vProp.category != 'System Plus' -->
                        <li *ngIf="vProp.recordState !== 'Archived' &&vProp.displayName !='Individual Form Name' && parentEntity.recordState =='Active'&& vProp.recordState =='Active' && mainLayout.checkCommonPermission('Form Design','Archive',null) && ( vProp.recordState !== 'Soft Deleted') && (vProp.tier && vProp.tier != 'Self Table') ">
                              <a (click)="updateStatus(vProp,'Archived')">Archive</a>
                          </li>
                          <li *ngIf="vProp.recordState !== 'Archived' && vProp.displayName !='Individual Form Name' && parentEntity.recordState =='Active'&& vProp.recordState =='Active' && mainLayout.checkCommonPermission('Form Design','Soft Delete',null) && ( vProp.recordState !== 'Soft Deleted') && (vProp.tier && vProp.tier != 'Self Table')">
                              <a (click)="updateStatus(vProp,'Soft Delete')">Soft Delete</a>
                          </li>
                          <li *ngIf="vProp.displayName !='Individual Form Name' && parentEntity.recordState =='Active' && (parentTab.recordState =='Active') && mainLayout.checkCommonPermission('Form Design','Restore',null) && (vProp.recordState == 'Archived') && (!parentEntity?.isSystemGenerated)&& ((vProp.category == 'User Created' || vProp.category == 'System') || (this.parentEntity['modelTableTypes'] == 'File' && mrvLayout ) || (isScheduleTable && !mrvLayout && (baseProp || vProp.required == 'No' || this.vProp.category == 'User Created' || vProp.category == 'System')))">
                              <a (click)="updateStatus(vProp,'Active')">Restore</a>
                          </li>
                          </ul>
                          </li>
                           <!-- coment in 4011 -->
                            <!-- (mainLayout.getUserPermissionsData['userClassifications'].indexOf('Application Administrator') !== -1
                          || mainLayout.getUserPermissionsData['userClassifications'].indexOf('fsadmin') !== -1) &&  -->
                            <li *ngIf="(!parentEntity?.isSystemGenerated)">
                              <a (click)="updateStatus(vProp,'Record Manager')">Record Manager</a>
                          </li>
                          <li>
                              <a (click)="updateStatus(vProp,'Audit Log')">Audit Log </a>
                          </li>
                      </ul>
                  </div>
                  <div class="dropdown row-menu" *ngIf="(recordIdCogIcon==vProp.id && last  && parentEntity.viewTabs[activeTabIndex].viewProperty.length > 1)" (mouseleave)="displayNameId='';changeIdCogIcon()" style="position:absolute">
                    <ul class="dropdown-menu row-menu" style="display: block;min-width: 50px;padding: 0px 0;left: unset;right: 30px;top: -4px;transform: scaleX(-1);">
                      <li [ngClass]="mainLayout.checkIsRecordLock(modelTableNameForRecordLock, (formViewShow ? formViewId : parentEntity.table)) != false ? 'wrapper' : '' " [title]="mainLayout.checkIsRecordLock(modelTableNameForRecordLock, (formViewShow ? formViewId : parentEntity.table)) != false ? mainLayout.recordLockedByUserName + ' is currently editing the record.' : '' ">
                        <ul class="pointer-events-none" style="list-style: none;padding:0px;font-weight: normal !important;">
                      <li style="transform: scaleX(-1);" *ngIf="parentEntity.recordState =='Active'&& vProp.recordState =='Active' && mainLayout.checkCommonPermission('Form Design','Archive',null) && (vProp.recordState !== 'Archived' && vProp.recordState !== 'Soft Deleted') && (!parentEntity?.isSystemGenerated)&& (((this.parentEntity['modelTableTypes'] != 'File' && (vProp.category == 'User Created' || vProp.category === 'System Plus' || vProp.category === 'System')) || ((this.parentEntity['modelTableTypes'] == 'File' && vProp.category != 'User Created') || (this.parentEntity['modelTableTypes'] == 'File' && vProp.category == 'User Created' && vProp.required != 'Yes') || (this.parentEntity['modelTableTypes'] == 'File' && mrvLayout ) ||  (isScheduleTable && !mrvLayout && (baseProp || vProp.required == 'No' || this.vProp.category == 'User Created')) ))) && ((vProp.required == 'Yes' || vProp.required == 'Yes for Complete Record') ? (vProp?.propertyAutomationNavigation?.recordState == 'Active' ? true : ((vProp.required == 'Yes' ) ? ((vProp.propertySelection =='Navigation Defined (Hide)' || vProp.propertySelection ==='Navigation Defined (Display)') ? true : false) : (vProp.required == 'Yes for Complete Record' ? false : true))) : true) || mrvLayout ">
                            <a (click)="updateStatus(vProp,'Archived')">Archive</a>
                        </li>
                        <li style="transform: scaleX(-1);" *ngIf=" parentEntity.recordState =='Active' && (parentTab.recordState =='Active') && mainLayout.checkCommonPermission('Form Design','Restore',null) && (vProp.recordState == 'Archived') && (!parentEntity?.isSystemGenerated)&& ((vProp.category == 'User Created' || vProp.category == 'System' || vProp.category === 'System Plus') || (this.parentEntity['modelTableTypes'] == 'File' && mrvLayout ) ||  (isScheduleTable && !mrvLayout && (baseProp || vProp.required == 'No' || (vProp.category == 'User Created' || vProp.category == 'System' || vProp.category === 'System Plus'))) )">
                            <a (click)="updateStatus(vProp,'Active')">Restore</a>
                        </li>
                        <li style="transform: scaleX(-1);" *ngIf="(((this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
                        || this.parentEntity['modelTableTypes'] == 'Schedule Calendar') && vProp.required=='Qualified' )) && (parentEntity.recordState =='Active' || parentEntity.recordState =='Active (Incomplete)') && (vProp.recordState =='Active' || vProp.recordState =='Active (Incomplete)' ) && mainLayout.checkCommonPermission('Form Design','Soft Deleted',null) && (vProp.recordState !== 'Archived' && vProp.recordState !== 'Soft Deleted') && (!parentEntity?.isSystemGenerated)&& vProp.category == 'User Created'">
                            <a (click)="updateStatus(vProp,'Soft Deleted')">Soft Delete</a>
                        </li>
                        </ul>
                        </li>
                        <!-- coment in 4011 -->
                        <!-- (mainLayout.getUserPermissionsData['userClassifications'].indexOf('Application Administrator') !== -1
                      || mainLayout.getUserPermissionsData['userClassifications'].indexOf('fsadmin') !== -1) &&  -->
                        <li style="transform: scaleX(-1);" *ngIf="(!parentEntity?.isSystemGenerated)">
                            <a (click)="updateStatus(vProp,'Record Manager')">Record Manager </a>
                        </li>
                        <li style="transform: scaleX(-1);" >
                            <a (click)="updateStatus(vProp,'Audit Log')">Audit Log</a>
                        </li>
                    </ul>
                </div>
                    <div></div>
                </div>
            </div>

            <div *ngIf="!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && parentEntity['modelTableTypes'] == 'File' ? parentEntity.type != 'Multi Record (MRV)' && parentEntity.type!='Single Record (SRV)' : true && !vProp.id )" ngDefaultControl name="test_" style="display: inline-block;" [ngStyle]="{'height': (vProp.required=='No' ||  ((this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
            || this.parentEntity['modelTableTypes'] == 'Schedule Calendar'|| this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' ) ? false : vProp.required=='Qualified')) && !isCreate && (this.parentEntity.type=='Create (CV)'|| this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) ? '20px' : '20px', 'margin-left': vProp.required=='No' || vProp.required=='Qualified' ? '65%' : '0%'  }"
                (click)="!vProp.id ? removeViewPropertyForCV(vProp):setRecordLinedOut(vProp)"><span *ngIf="(vProp.required=='No' ||
                ((this.parentEntity['modelTableTypes'] == 'Schedule Record' || this.parentEntity['modelTableTypes'] == 'Schedule Design'
                || this.parentEntity['modelTableTypes'] == 'Schedule Calendar' || this.parentEntity['modelTableTypes'] == 'Standard' || this.parentEntity['modelTableTypes'] == 'Standard (Single Active)' ) ? false : vProp.required=='Qualified')) && (this.parentEntity.type=='Create (CV)' || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) && !isCreate "
                    class="fa fa-trash 6 glycolor"></span></div>
         <!-- This div is just to set design -->
         <div id="design1" *ngIf="(((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || parentEntity.layout=='Grid' ) ? inEditMode : !inEditMode) && vProp.displayName?.search('Static Text') != -1 &&  vProp.displayName?.search('Static Image') != -1  " [ngStyle]="{'padding-top': (parentEntity.layout=='Grid' ) ? '0px': '0px'}" > </div>

         <div  id="design 3" *ngIf=" (vProp.displayName?.search('Static Text') != -1 ||  vProp.displayName?.search('Static Image') != -1 ) && vProp.displayName!='Static Text 01' && vProp.displayName!='Static Text 02' && vProp.displayName!='Static Text 03' && vProp.displayName!='Static Text 04' && vProp.displayName!='Static Image 01' && vProp.displayName!='Static Image 02' && vProp.displayName!='Static Image 03' && vProp.displayName!='Static Image 04'"> </div>

          <div id="design" *ngIf="(!formViewId || inEditMode) && ((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && formViewShow) " [ngStyle]="{'padding-top': (parentEntity.layout=='Grid' ) ? '0px': '0px'}" > </div>

          <!--View Tab-->

          <div class="item p-3  ggta" *ngIf="cvValidation() && (formViewShow ? !(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) : true)">
            <select
              [disabled]="vProp?.isFormNameProperty || (!inEditMode || (vProp?.recordState != constantsModelView.active && vProp?.recordState != constantsModelView.active_Incomplete))"
              *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length>1" ngDefaultControl name="ciewTabs Columns"
              class="form-control select-enums" [(ngModel)]="vProp.viewTabId"
              (ngModelChange)="onChange_ViewTab(vProp, vProp.viewTabId)"
              [ngStyle]="{'color': (vProp.viewTabId == null || vProp.viewTabId == 'null' || vProp.viewTabId == '' || vProp.viewTabId == undefined) ? '#acacac': '#555'}">
              <option *ngFor="let viewTabName of parentEntity.viewTabs;" [value]="viewTabName.id">
                {{viewTabName.name}}</option>
            </select>
            <span class="text" *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length==1">Base Tab</span>
          </div>

          <!--View Tab-->
          <!--property type-->

          <div *ngIf="((parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))  || parentEntity.layout == constantsModelView.Layout_Horizontal_Grid_2)" class="p-3 p1 item cc" >
                                    <label title="{{vProp.propertyType}}">
                  <span>{{vProp.propertyType}}</span>
            </label>
          </div>
                 <!-- proeprty type -->

                    <!--model table-->
             <div class="p-3 p1 item dd" *ngIf="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Create (CV) & Single Record (SRV)')  && !formViewShow">
                            <label  style="margin-bottom: 0;" class="centeraligh" title="{{ vProp.displayName?.search('Static Text') != -1 ||  vProp.displayName?.search('Static Image') != -1 ||  vProp.displayName?.search('Blank Space') != -1 ? '' : this.mainLayout.replaceUnderScore(vProp.modelTable_Name || vProp.selectedModelTableName) }}">

                {{ vProp.displayName?.search('Static Text') != -1 ||  vProp.displayName?.search('Static Image') != -1 ||  vProp.displayName?.search('Blank Space') != -1 ? '' : this.mainLayout.replaceUnderScore(vProp.modelTable_Name || vProp.selectedModelTableName) }}
      </label>
                </div>

          <!--/model table-->

          <div *ngIf="(parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && formViewShow && parentTab.createdBy" class="p-3 p1 item vv" id="vProp.displayName"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''" (mouseenter)="changeColorOnMouseHover('enter')" (mouseleave)="changeColorOnMouseHover('leave')" [ngClass]="highlightProperty ? 'Property-box' : '' ">
                   <label title="{{ vProp.displayName?.search(constantsModelView.Static_Text) || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp.displayName?.search(constantsModelView.Blank_Space) != -1? '' : mainLayout.replaceUnderScore(vProp.property?.name) }}">
          {{ vProp.displayName?.search(constantsModelView.Static_Text) != -1 ||  vProp.displayName?.search(constantsModelView.Static_Image) != -1 ||  vProp.displayName?.search(constantsModelView.Blank_Space) != -1 ? '' : mainLayout.replaceUnderScore(vProp.propertyType) }}<span class='required-black' *ngIf="(this.parentEntity.type== constantsModelView.ViewType_CreateView  || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord || this.parentEntity.type == constantsModelView.ViewType_CreateViewAndSingleRecord) && this.parentEntity['modelTableTypes'] == constantsModelView.file && vProp.required =='Yes' && vProp.category == constantsModelView.user_created"></span>
    </label>

        </div>
        <div class="p-3 p1 item ff"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" *ngIf="(parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && formViewShow && !parentTab.createdBy && !vProp.id">
          <ng-multiselect-dropdown class="unset"
          *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty"
          [msId]="'vpr109'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated"
          [placeholder]="'Property Type (R)'"
          (onSelect)="getPropertyByPropertyType(vProp)" (onDeSelect)="getPropertyByPropertyType(vProp)"
          [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
          (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'' " [data]="constantsModelView.propertyTypes" [(ngModel)]="vProp.propertyType"
          [isRelatedSelection]="true" [disabled]="vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)'">
        </ng-multiselect-dropdown>
        <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty" title="{{vProp.propertyType}}" >{{vProp.propertyType}}</label>
        <label *ngIf=" (vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1 )">{{replaceUnderScores(vProp?.property?.name,0)}}</label>
        <label *ngIf="vProp.id || vProp.isRequired">{{vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1 ? '' : replaceUnderScores(vProp.propertyType)}}</label>
      </div>

      <!-- proeprty type -->

      <!-- Table Property -->
      @if ((parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && parentEntity.table && parentEntity?.type ==
      constantsModelView.ViewType_MultiRecord && formViewShow && parentTab.createdBy) {
      <div class="p-3 p1 item ii"
        appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }"
        (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''">
        <label
          title="{{ vProp.displayName?.search('Static Text') || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1? '' : mainLayout.replaceUnderScore(vProp.property?.name) }}">
          {{ vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 ||
          vProp.displayName?.search('Blank Space') != -1 ? '' : !(parentEntity.type=='Create (CV), Multi Record (MRV) & Single
          Record (SRV)' && !isSingleBaseTable ? true :
          (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType))) ?
          mainLayout.replaceUnderScore(vProp?.modelTableName) : '' }}<span class='required-black'
            *ngIf="(this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) && this.parentEntity['modelTableTypes'] == 'File' && vProp.required =='Yes' && vProp.category == 'User Created'"></span>
        </label>

      </div>
      }
          <div *ngIf="(parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && parentEntity.table && parentEntity.table.length == 1 && formViewShow && !parentTab.createdBy " class="p-3 p1 item jj"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }">
            <ng-multiselect-dropdown
            *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty && !(parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))"
            [msId]="'vpr112'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
            (onSelect)="getPropertyByTableName(vProp)" (onDeSelect)="getPropertyByTableName(vProp)"
            [settings]="constantsModelView.dropdownSettingsForTableProperty" [placeholder]="'Table (R)'"
            [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Table is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                                  (vProp?.selectedModelTableId == null || vProp?.selectedModelTableId == '' || vProp?.selectedModelTableId == undefined || vProp?.selectedModelTableId == 'null') ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
            [data]="vProp.vpMtTables" [(ngModel)]="vProp.selectedModelTableId" [isRelatedSelection]="true"
            [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || svcModelViewData.disableIfSameOneToMany">
          </ng-multiselect-dropdown>

          <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty && !(parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))" title="{{vProp.propertyType}}" >{{vProp?.modelTableName}}</label>
          <label *ngIf="(vProp.id || vProp.isRequired) && !(parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord && !isSingleBaseTable ? true : (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType)))">{{vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp.displayName?.search(constantsModelView.Blank_Space) != -1 ? '' : replaceUnderScores(vProp?.modelTableName)}}</label>
        </div>
        <!--Table Property-->


        <div class="p-3 p1 item "
          *ngIf="!(vProp.displayName?.search('Static Text') != -1 || vProp?.staticText || vProp?.isStaticImage || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1) && (parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord  && (formViewShow && parentEntity.table && parentEntity?.table?.length == 1))" >
          <!-- <ng-multiselect-dropdown
                *ngIf="(parentEntity.layout == 'Row')"
                [msId]="'vpr01'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                [settings]="constantsModelView.dropdownSettingsForRelatedTable" [placeholder]="'Table (R)'"
                (onSelect)="setLevelofViewProperty(vProp,vProp.relatedModelTables);getModelProperties(vProp,vProp.selectedModelTableId);"
                (onDeSelect)="setLevelofViewProperty(vProp,vProp.relatedModelTables);getModelProperties(vProp,vProp.selectedModelTableId);vProp.relatedTableProperties = null"
                [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Table is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                                      (vProp?.selectedModelTableId == null || vProp?.selectedModelTableId == '' || vProp?.selectedModelTableId == undefined || vProp?.selectedModelTableId == 'null') ? 'errorsShowMultiSelect':'', parentEntity.layout=='Column' ? '' : 'unset'] "
                [data]="vProp.vpMtTables" [(ngModel)]="vProp.selectedModelTableId" [isRelatedSelection]="true"
                [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || svcModelViewData.disableIfSameOneToMany">
              </ng-multiselect-dropdown> -->
          <div *ngIf="formViewShow" class="p1"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" (dblclick)="preUrl == constantsModelView.formView ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''">
            <label
              title="{{ vProp.displayName?.search(constantsModelView.Static_Text) || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp.displayName?.search(constantsModelView.Blank_Space) != -1? '' : mainLayout.replaceUnderScore(vProp.property?.name) }}">
              {{ vProp.displayName?.search(constantsModelView.Static_Text) != -1 ||
              vProp.displayName?.search(constantsModelView.Static_Image) != -1 ||
              vProp.displayName?.search(constantsModelView.Blank_Space) != -1 ? '' :
              !(parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord && !isSingleBaseTable ? true :
              (constantsModelView.filteredPropertyTypes.includes(vProp.propertyType))) ?
              mainLayout.replaceUnderScore(vProp?.selectedModelTableName) : '' }}
              <span class='required-black'
                *ngIf="(this.parentEntity.type==constantsModelView.ViewType_CreateView  || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord ) && this.parentEntity['modelTableTypes'] == constantsModelView.file && vProp.required =='Yes' && vProp.category == constantsModelView.user_created">
              </span>
            </label>
          </div>
        </div>
        <!-- Related Table -->
        <div
          *ngIf="(!(vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp?.isStaticText || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp?.isStaticImage || vProp.displayName?.search(constantsModelView.Blank_Space) != -1) )&&(parentEntity.layout != constantsModelView.Layout_Vertical && !(parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design))&&(formViewShow || printoutShow || parentEntity.type == constantsModelView.ViewType_Printout)"
          class="p-3 p1 item ll">

                    <label *ngIf="(vProp.table == undefined ||vProp.table == null) && vProp.relatedTable && vProp.propertyType == constantsModelView.formPropertyTypes.relatedNonTable"
            title="{{ vProp.displayName?.search(constantsModelView.Static_Text) || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp.displayName?.search(constantsModelView.Blank_Space) != -1? '' : mainLayout.replaceUnderScore(vProp.property?.name) }}">
            {{ vProp?.displayName?.search(constantsModelView.Static_Text) != -1 ||
            vProp.displayName?.search(constantsModelView.Static_Image) != -1 ||
            vProp.displayName?.search(constantsModelView.Blank_Space) != -1 ? '' :
            mainLayout.replaceUnderScore(vProp.modelTableName) }}<span class='required-black'
              *ngIf="(this.parentEntity.type==constantsModelView.ViewType_CreateView  || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord) && this.parentEntity['modelTableTypes'] == constantsModelView.file && vProp.required =='Yes' && vProp.category == constantsModelView.user_created"></span>


          </label>
        </div>

                  <!-- Related Table -->

                   <!-- Related Table Property -->
          <div class="item p-3 456"
          *ngIf="((formViewShow && (parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? (!(parentEntity.table == null || parentEntity.table.length > 1)): true) && !(vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp?.isStaticText || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp?.isStaticImage || vProp.displayName?.search(constantsModelView.Blank_Space) != -1) && (parentEntity.type == constantsModelView.ViewType_SingleRecord || parentEntity.type == constantsModelView.ViewType_MultiRecord || parentEntity.layout == constantsModelView.Layout_Horizontal_Grid_2 || formViewShow || printoutShow || parentEntity.type == constantsModelView.ViewType_Printout)&& (formViewShow ? (parentEntity.layout != constantsModelView.Layout_Vertical && !(parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) : true)">
          <!-- <div *ngIf="(vProp.tier == 'Down' || vProp.tier == 'Up')"> -->
            <ng-multiselect-dropdown
            *ngIf="inEditMode && ((parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && !vProp.id)  && vProp?.relatedTableProperties != null && vProp?.relatedTableProperties.length > 0"
            [msId]="'vpr151'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="overflow-hidden"
            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Relationship Property (R)'"
            [data]="vProp?.relatedTableProperties" [(ngModel)]="vProp.relationshipProperty" [isRelatedSelection]="true"
            [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(constantsModelView.errorMsg.related_property) != -1 || error_msg.indexOf(constantsModelView.errorMsg.fillAllRequired) != -1) : false ) &&
                        (vProp.relationshipProperty == null || vProp.relationshipProperty == '' || vProp.relationshipProperty == undefined || vProp.relationshipProperty == 'null') ? 'errorsShowMultiSelect':'', (parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? '': 'unset' ]">
          </ng-multiselect-dropdown>

          <label *ngIf="vProp.relationshipPropertyName && vProp.relationshipPropertyName != null"
            title="{{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}">
            {{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}
          </label>
          <!-- </div> -->
        </div>
        <!-- /Related Table Property -->

          <!--model property-->

          <div class="p-3 p1 item mm"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: parentEntity.layout, rowListData: rowListData, parentEntity: parentEntity}" *ngIf="parentTab.createdBy" (dblclick)="ForFormView == constantsModelView.formView || vProp.isStaticText ? viewPropertySrv(vProp.id,vProp,parentEntity.layout) : ''">
            <label title="{{ mainLayout.replaceUnderScore(vProp.property?.name) }}">
      {{ (parentEntity.layout !=='Column' && !(parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))&&this.showStaticValue?.length>0&&this.showStaticValue!==' '?replaceUnderScores(this.showStaticValue,0):mainLayout.replaceUnderScore(vProp.property?.name) }}<span class='required-black' *ngIf="(this.parentEntity.type=='Create (CV)'  || this.parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || this.parentEntity.type=='Create (CV) & Single Record (SRV)' ) && this.parentEntity['modelTableTypes'] == 'File' && vProp.required =='Yes' && vProp.category == 'User Created'"></span>
      </label>

          </div>
          <div class="p-3 p1 item nn"  appChangeColor="{preUrl: preUrl, vProp: vProp, layout: '', rowListData: rowListData, parentEntity: parentEntity }" *ngIf="!parentTab.createdBy">
          <ng-multiselect-dropdown
            *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties  && !vProp?.isFormNameProperty && (parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) && formViewShow && !vProp.id "
            [msId]="'vpr130'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForForm"
            [placeholder]="'Property (R)'"
            (onChange)="addRelatedTable(vProp.property.id)"
            (onSelect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id);forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
            (onDeselect)="onModelPropertyChange(vProp.property.id);getModelViewModelTablePropertiesValue();addRelatedTable(vProp.property.id);forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
            [ngClass]="[(error_msg != undefined ? (error_msg.indexOf('Property is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
            (vProp.property?.id == null || vProp.property?.id == '' || vProp.property.id == undefined ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] " [data]="(vProp.propertyType && ((vProp.tier == this.constantsModelView.Tier.Self || vProp.tier == this.constantsModelView.Tier.Up || vProp.tier == this.constantsModelView.Tier.Multiselect || vProp.tier == this.constantsModelView.Tier.Down) ? vProp.selectedModelTableId : true)) ? vProp.modelViewModelTableProperties : []" [(ngModel)]="vProp.property.id"
            [isRelatedSelection]="true" [disabled]="(parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)' : false">
          </ng-multiselect-dropdown>
          <label *ngIf="!vProp.id && !vProp.isRequired && vProp.modelViewModelTableProperties && vProp?.isFormNameProperty">{{vProp.property.name}}</label>
          <label *ngIf=" (vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1 )">{{replaceUnderScores(vProp?.property?.name,0)}}</label>
          <label *ngIf="vProp.id || vProp.isRequired">{{vProp.displayName?.search('Static Text') != -1 || vProp.displayName?.search('Static Image') != -1 || vProp.displayName?.search('Blank Space') != -1 ? '' : replaceUnderScores(vProp.property.name)}}</label>
          </div>


          <!-- Related Table (For the first column in form's column view)-->

        <div
        *ngIf="!((vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp?.isStaticText || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp?.isStaticImage || vProp.displayName?.search(constantsModelView.Blank_Space) != -1))&&(formViewShow && (parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))&&(formViewShow || printoutShow || parentEntity.type == constantsModelView.ViewType_Printout)"
        class="p-3 p1 item aa">
                <label *ngIf="(vProp.table == undefined ||vProp.table == null) && vProp.relatedTable && vProp.propertyType == constantsModelView.formPropertyTypes.relatedNonTable"
          title="{{ vProp.displayName?.search(constantsModelView.Static_Text) || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp.displayName?.search(constantsModelView.Blank_Space) != -1? '' : mainLayout.replaceUnderScore(vProp.property?.name) }}">
          {{ vProp?.displayName?.search(constantsModelView.Static_Text) != -1 ||
          vProp.displayName?.search(constantsModelView.Static_Image) != -1 ||
          vProp.displayName?.search(constantsModelView.Blank_Space) != -1 ? '' :
          mainLayout.replaceUnderScore(vProp.modelTableName) }}<span class='required-black'
            *ngIf="(this.parentEntity.type==constantsModelView.ViewType_CreateView  || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndMrvSrvRecord || this.parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord) && this.parentEntity['modelTableTypes'] == constantsModelView.file && vProp.required =='Yes' && vProp.category == constantsModelView.user_created"></span>


        </label>
      </div>


        <!-- header -->
        <div *ngIf="vProp.id && !inEditMode" class="item" >
          <label title="{{mainLayout.replaceUnderScore((vProp.isStaticText || vProp.isStaticImage || vProp.isBlankSpace) ? vProp.displayNameValue : vProp.displayName)}}">{{mainLayout.replaceUnderScore(vProp.isStaticText || vProp.isStaticImage || vProp.isBlankSpace ?  vProp.isBlankSpace?vProp.displayName:vProp.displayNameValue : vProp.displayName)}}</label>
        </div>
        <div *ngIf=" (inEditMode || !vProp.id) && !vProp.isStaticText && !vProp.isStaticImage && !vProp.isBlankSpace" class="item p-3 we" > <!--removed for 3183-->
               <input #displayName="ngModel" (change)="setMasterSortData()" [(ngModel)]="vProp.displayName" *ngIf="replaceUnderScore(vProp.displayName) " maxlength="50" (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,vProp.displayName,vProp)"
                 ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" placeholder="Display Name (R)" [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Display Name is required') != -1 ||
                 error_msg.indexOf('Please fill the required values') != -1) : false) &&
                 (vProp.displayName == null || vProp.displayName == '' || vProp.displayName?.trim().length == 0 )) || ((parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : (vProp.displayName == null || vProp.displayName == '' || vProp.displayName?.trim().length == 0 ) ) ? 'errorsShow':'' " />
            </div>
            <!--/item header -->
            <div *ngIf="!vProp.id && (vProp.isStaticText ? vProp.displayName?.search('Static Text') != -1:false)" class="item header p-3" style="background-color: #ffffff;">
                <input #displayName="ngModel" [(ngModel)]="vProp.displayNameValue" *ngIf="replaceUnderScore(vProp.displayName) " maxlength="50" (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,'Static Text',vProp)"
                 ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
            </div>
            <!-- {{ vProp.layout == 'Row' }}||{{vProp.displayName!='Static Image 01'|json}}--{{!formViewShow}}--{{vProp.displayName}} -->
            <div *ngIf="!vProp.id && (vProp.isStaticImage ? vProp.displayName?.search('Static Image') != -1:false)" class="item header p-3" style="background-color: #ffffff;">
              <input #displayName="ngModel" [(ngModel)]="vProp.displayNameValue" *ngIf="replaceUnderScore(vProp.displayName) " maxlength="50" (keyup)="forTrackDisplaynameEmit(vProp.displayNameValue,'Static Image',vProp)"
               ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
          </div>
          <div *ngIf="!vProp.id && (vProp.isBlankSpace ? vProp.displayName?.search('Blank Space') != -1:false)" class="item header p-3" style="background-color: #ffffff;">
            <input #displayName="ngModel" [(ngModel)]="vProp.displayNameValue" *ngIf="replaceUnderScore(vProp.displayName) " maxlength="50" readonly
             ngDefaultControl name="displayName_{{itemIndex}}" class="form-control" autocomplete="off" [placeholder]="vProp.displayName" />
        </div>
            <!--/item header -->

  <!-- Related Table Property -->
  <div class="item p-3 dfe"
  *ngIf="((formViewShow && (parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? !(parentEntity.table == null || parentEntity.table.length > 1) : true) && !((vProp.displayName?.search(constantsModelView.Static_Text) != -1 || vProp?.isStaticText || vProp.displayName?.search(constantsModelView.Static_Image) != -1 || vProp?.isStaticImage || vProp.displayName?.search(constantsModelView.Blank_Space) != -1)&&((parentEntity.layout==constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))|| parentEntity.layout == constantsModelView.Layout_Horizontal_Grid_2) )&&(formViewShow && (parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))">
  <!-- <div *ngIf="(vProp.tier == 'Down' || vProp.tier == 'Up')"> -->
  <ng-multiselect-dropdown
    *ngIf="inEditMode && ((parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && !vProp.id)  && vProp?.relatedTableProperties != null && vProp?.relatedTableProperties.length > 0"
    [msId]="'vpr152'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}" class="overflow-hidden"
    [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Relationship Property (R)'"
    [data]="vProp?.relatedTableProperties" [(ngModel)]="vProp.relationshipProperty" [isRelatedSelection]="true"
    [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(constantsModelView.errorMsg.related_property) != -1 || error_msg.indexOf(constantsModelView.errorMsg.fillAllRequired) != -1) : false ) &&
                (vProp.relationshipProperty == null || vProp.relationshipProperty == '' || vProp.relationshipProperty == undefined || vProp.relationshipProperty == 'null') ? 'errorsShowMultiSelect':'', (parentEntity.layout == constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) ? '': 'unset' ]">
  </ng-multiselect-dropdown>

  <!-- <label *ngIf="vProp.relationshipPropertyName && vProp.relationshipPropertyName != null"
    title="{{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}">
    {{mainLayout.replaceUnderScore(vProp.relationshipPropertyName)}}
  </label> -->
  <!-- </div> -->
</div>
<!-- /Related Table Property -->

  <!--View Tab-->

  <div class="item p-3 x1" *ngIf="cvValidation() && (formViewShow && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)))">
    <select
      [disabled]="vProp?.isFormNameProperty || (!inEditMode || (vProp?.recordState != constantsModelView.active && vProp?.recordState != constantsModelView.active_Incomplete))"
      *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length>1" ngDefaultControl name="ciewTabs Columns"
      class="form-control select-enums" [(ngModel)]="vProp.viewTabId"
      (ngModelChange)="onChange_ViewTab(vProp, vProp.viewTabId)"
      [ngStyle]="{'color': (vProp.viewTabId == null || vProp.viewTabId == 'null' || vProp.viewTabId == '' || vProp.viewTabId == undefined) ? '#acacac': '#555'}">
      <option *ngFor="let viewTabName of parentEntity.viewTabs;" [value]="viewTabName.id">
        {{viewTabName.name}}</option>
    </select>
    <span class="text" *ngIf="this.parentEntity.viewTabs && this.parentEntity.viewTabs.length==1">Base Tab</span>
  </div>

  <!--View Tab-->


            <!--item width-->
            <!-- <div class="item col-width" *ngIf="parentEntity.layout=='Column'">
                <span class="fa fa-minus-circle" *ngIf="!vProp.id" (click)="onChange_PropertyWidth(vProp, -10)" title="Decrease Column Width"></span>
                <input #width="ngModel" [(ngModel)]="vProp.width" type="number" ngDefaultControl name="width" class="form-control" disabled="disabled" placeholder="{{constantsModelView.ViewProperty_DefaultWidth}}" />
                <span class="fa fa-plus-circle" *ngIf="!vProp.id" (click)="onChange_PropertyWidth(vProp, 10)" title="Increase Column Width"></span>
            </div> -->
            <!--/item width-->

            <!-- 3553 - Pick List entry cell standardization -->
            <!--display order-->
            <!-- <div class="item" *ngIf="parentEntity.layout =='Column'" >
                <span>
                <span class="centeraligh"  >
            <span *ngIf=" vProp.propertySelection !='Navigation Defined (Hide)' && parentEntity.layout=='Column'" [hidden]="checkDisableWithCat({reordering_to:'Previous'})" class="arrow-signs fa fa-chevron-left 1" (click)="modelViewCreateScreen({reordering_to:'Previous'})"></span>
                <span *ngIf=" vProp.propertySelection !='Navigation Defined (Hide)'&& parentEntity.layout=='Column' " [hidden]="checkDisableWithCat({reordering_to:'Next'})" class="fa fa-chevron-right arrow-signs 2"  (click)="modelViewCreateScreen({reordering_to:'Next'})"></span>
                </span>
                </span>
            </div> -->
            <!--/display order-->

            <!--/model property-->
            <!--required-->
            <div class="item p-3 1 mmmm" [ngClass]="vProp.property.required =='View Configured' ? 'dbp-0': 'p-3'"
              *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage|| vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&((parentEntity.type=='Create CV' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) || (parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)')  || parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)'  || parentEntity.layout == 'Grid')) && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')" >
              <!-- Disabled for 1678 -->

              <div *ngIf="vProp.property.required =='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <ng-multiselect-dropdown
                  [msId]="'vpr54'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Required (R)'" [(ngModel)]="vProp.required"
                  [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || !inEditMode ? true : false"
                  [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Required) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) && (vProp.required == 'null' || vProp.required == null || vProp.required == '') ? 'errorsShowMultiSelect':'' " [data]="parentEntity.viewPropertyRequiredTypes" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>

              <div *ngIf="vProp.property.required !='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <label [style]="vProp?.fontStylingForLabel"
                  title="{{this.mainLayout.replaceUnderScore(vProp.required)}}">
                  {{this.mainLayout.replaceUnderScore(vProp.required)}}
                </label>
              </div>
            </div>
            <!--/required-->
            <!--editable-->
            <div class="item p-3 ee" [ngClass]="vProp.property.required =='View Configured' ? 'dbp-0': 'p-3'" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)'  || parentEntity.layout == 'Grid'))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">
            <!-- Disabled for tk 1678 -->

              <div *ngIf="vProp.property.editable =='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <ng-multiselect-dropdown [msId]="'vpr55'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Editable (R)'"
                  [(ngModel)]="vProp.allowEdit"
                  [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || !inEditMode ? true : false"
                  [ngClass]="(error_msg != undefined ? (error_msg.indexOf(' (Editable) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) && (vProp.allowEdit == 'null' || vProp.allowEdit == null || vProp.allowEdit == '') ? 'errorsShowMultiSelect':'' "
                  [data]="parentEntity.viewPropertyEditableTypes" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>

              <div *ngIf="vProp.property.editable !='View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <label>{{this.mainLayout.replaceUnderScore(vProp.allowEdit)}}</label>
              </div>
            </div>
            <!--/editable-->

            <!--Allow Duplicate-->
            <div class="item  Allow Duplicate" [ngClass]="vProp.property.required =='View Configured' ? 'dbp-0': 'p-3'" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp?.isStaticImage || vProp?.isStaticText || vProp.displayName?.search('Static Text') != -1)&&(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Multi Record (MRV)' || parentEntity.layout == 'Grid'  || (formViewShow && parentEntity.type=='Multi Record (MRV)')))  && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')">

              <div *ngIf="vProp?.property?.allowDuplicate == 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <ng-multiselect-dropdown [msId]="'vpr56'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Allow Duplicate (R)'" [(ngModel)]="vProp.allowDuplicate"
                  (ngModelChange)="(vProp.allowDuplicate == 'Yes' || vProp.allowDuplicate == null || vProp.allowDuplicate == undefined || vProp.allowDuplicate == 'null') ? vProp.duplicateCheck = null : null"
                  [disabled]="(parentEntity['viewType'] != 'Form' ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity['modelTableTypes'] != 'Standard' && parentEntity['modelTableTypes'] != 'Standard (Single Active)' && parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System':false : false))) :  !inEditMode) ? true : false"
                  [ngClass]="((vProp.allowDuplicate == null || vProp.allowDuplicate == '' || vProp.allowDuplicate == undefined ) &&  (checkRedBorder(vProp,error_msg) ||  error_msg.indexOf(' (Allow Duplicate) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1 )) ? 'errorsShowMultiSelect':'' "
                  [data]="allowDuplicateTypes" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>

              <div *ngIf="vProp?.property?.allowDuplicate != 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                <label title="{{this.mainLayout.replaceUnderScore(replaceModelFromNameColumn(vProp.allowDuplicate))}}">{{this.mainLayout.replaceUnderScore(replaceModelFromNameColumn(vProp.allowDuplicate))}}</label>
              </div>

            </div>
              <!--/Allow Duplicate-->

              <!-- 3553 - Pick List entry cell standardization -->
               <!--Duplicate Check-->
            <!-- <div class="item  duplicateCheck" *ngIf="parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' ">
                  <label title="{{delimaterRemove(vProp.duplicateCheck)}}">
                    {{delimaterRemove(vProp.duplicateCheck)}}
                  </label>
              </div> -->
              <div class="item p-3 11 b"  *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' || parentEntity.type=='Single Record (SRV)' || parentEntity.layout == 'Grid' || (formViewShow && parentEntity.type=='Multi Record (MRV)'))) && ((vProp.tier != 'Up' && vProp.tier != 'Down') || parentEntity.layout == 'Column')"  >

                <div *ngIf="vProp.property?.allowDuplicate == 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
                  <ng-multiselect-dropdown [msId]="'vpr115'+'_'" class="rr-state"  *ngIf="((parentEntity['viewType'] == 'Form' ? (vProp?.allowDuplicate != 'Yes' || vProp.property?.allowDuplicate == 'View Configured') : (vProp?.allowDuplicate != 'Yes')) || (parentEntity['viewType'] != 'Form' ? (vProp?.allowDuplicate != 'Yes' && vProp.property?.allowDuplicate == 'View Configured')  : (vProp?.allowDuplicate != 'Yes'))) && vProp.allowDuplicate && vProp?.allowDuplicate != 'Yes'"
                  [disabled]="(parentEntity['viewType'] != 'Form' ? (((vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((parentEntity['modelTableTypes'] != 'Standard' && parentEntity['modelTableTypes'] != 'Standard (Single Active)' && parentEntity['modelTableTypes'] != 'File' ) ? vProp.category != 'User Created'? vProp.category != 'System':false : false))) :  !inEditMode) ? true : false"
                  [settings]="dropdownSettingsMain" [ngModelOptions]="{standalone: true}" [placeholder]="'Duplicate Check (R)'"
                  [data]="duplicateCheckRecordStateTypes" [(ngModel)]="vProp.duplicateCheck" [ngClass]=" ((vProp.duplicateCheck == 'null' || vProp.duplicateCheck == null || vProp.duplicateCheck == '' || vProp.duplicateCheck?.length == 0 ) &&  (checkRedBorder(vProp,error_msg) ||  error_msg.indexOf(' (Duplicate Check) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1 )) ? 'errorsShowMultiSelect':'' "></ng-multiselect-dropdown>
                </div>

             <!-- {{vProp.duplicateCheck}} -->
             <div *ngIf="vProp.property?.allowDuplicate != 'View Configured'   && vProp.tier != 'Up' && vProp.tier != 'Down'">
               {{(((parentEntity['viewType'] == 'Form' ? (vProp?.allowDuplicate != 'Yes' || vProp.property?.allowDuplicate == 'View Configured') : (vProp?.allowDuplicate != 'Yes')) || (parentEntity['viewType'] != 'Form' ? (vProp?.allowDuplicate != 'Yes' && vProp.property?.allowDuplicate == 'View Configured')  : (vProp?.allowDuplicate != 'Yes'))) && vProp.allowDuplicate && vProp?.allowDuplicate != 'Yes') ? vProp.duplicateCheck : ''}}
             </div>
              </div>
              <!--/Duplicate Check-->
              <!--Releated property Type-->
<div class="item p-3 ii" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&inEditMode) && parentEntity.type !='Multi Record (MRV)' ">
@if (parentEntity.type != 'Printout (PO)' && !printoutShow) {
  <ng-multiselect-dropdown [msId]="'vpr120'+'_'+VTabIndex+'_'+itemIndex"
    *ngIf="(vProp.allowEdit !='Per View Design')  && ((vProp.property?.type=='Related' || vProp.property?.type=='Related (Multiselect)' || vProp.type=='Related' || vProp.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By') && (vProp.propertySelection == null || vProp.propertySelection == '')"
    [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
    [(ngModel)]="vProp.propertySelection" [ngModelOptions]="{standalone: true}" class="column-view-multiselect"
    (onSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
    (onDeSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
    [disabled]="((parentEntity['viewType'] != 'Form' && parentEntity['viewType'] != '' && parentEntity['viewType'] != null  ? (vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)') || ((this.parentEntity['modelTableTypes'] != 'Schedule Design' && this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && this.parentEntity['modelTableTypes'] != 'File') ? vProp.category != 'User Created'? vProp.category != 'System Plus':false: false) : false) || vProp.isNavigationExist == true) ? true : false"
    [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined) ) ? 'errorsShowMultiSelect':'' ]"
    [data]="vProp.propertySelectionTypes" [isRelatedSelection]="true">

  </ng-multiselect-dropdown>

  <ng-multiselect-dropdown [msId]="'vpr121'+'_'+VTabIndex+'_'+itemIndex"
    *ngIf="(vProp.allowEdit !='Per View Design')  && ((vProp.property?.type=='Related' || vProp.property?.type=='Related (Multiselect)' || vProp.type=='Related' || vProp.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.displayNameCopy != 'Last_Edited_By' && vProp.displayNameCopy != 'Created_By') && (vProp.propertySelection != null && vProp.propertySelection != '')"
    [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
    [(ngModel)]="vProp.propertySelection" [ngModelOptions]="{standalone: true}" class="column-view-multiselect"
    (onSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
    (onDeSelect)="shownavigationdata(vProp.isNavigationExist);onPropertySlectionChange();onRelatedPropertyTypeChange(parentCol,itemIndex)"
    [disabled]="(!inEditMode) ? true : false"
    [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined) ) ? 'errorsShowMultiSelect':'']"
    [data]="vProp.propertySelectionTypes" [isRelatedSelection]="true">

  </ng-multiselect-dropdown>
}
</div>
<div class="item 2334d23"
  *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&((parentEntity.layout == 'Grid')  && !inEditMode)) && parentEntity.type !=='Multi Record (MRV)'  ">
  <label class="centeraligh" style="white-space: nowrap !important;">
    {{this.mainLayout.replaceUnderScore(vProp.propertySelection)}}</label>
</div>

<div class="item 2334d23 2"
  *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&((parentEntity.type != 'Multi Record (MRV)')  && !inEditMode)) && parentEntity.type =='Multi Record (MRV)' ">
  <label class="centeraligh" style="white-space: nowrap !important;">
    {{this.mainLayout.replaceUnderScore(vProp.propertySelection)}}</label>
</div>

              <!-- <div class="item p-3 sddww" > -->

                <!-- 3591 Implementation in all application -->
       <!-- <label title="{{this.mainLayout.replaceUnderScore(vProp.selectedMrv?.name)}}" class="centeraligh" style="white-space: nowrap !important;padding: 5px 10px !important;"> {{this.mainLayout.replaceUnderScore(vProp.selectedMrv?.name)}}</label> -->


       <!-- <ng-multiselect-dropdown *ngIf="vProp.selectedMrv?.id && vProp.selectedMrv.name" [msId]="'vpr15'+'_'+itemIndex"
         [ngModelOptions]="{standalone: true}" [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
         [data]="[vProp.selectedMrv]" [(ngModel)]="vProp.selectedMrv.id" [isRelatedSelection]="true" [disabled]="true">
       </ng-multiselect-dropdown>


   <ng-multiselect-dropdown *ngIf="(formViewShow || printoutShow || parentEntity.type == 'Printout (PO)') && (parentEntity.layout=='Row'|| parentEntity.layout=='Grid') &&  vProp.type =='Related'" [msId]="'vpr15'+'_'+itemIndex"
       [ngModelOptions]="{standalone: true}" [ngClass]="[((error_msg != undefined ? (error_msg.indexOf('Property Selection is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) && (vProp.required && (vProp.allowEdit && vProp.allowEdit !='Per View Design'))  && ((vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)') && vProp.required != 'null') && (vProp.propertySelection == null || vProp.propertySelection == '' || vProp.propertySelection == undefined) ) ? 'errorsShowMultiSelect':'' ,(parentEntity.layout=='Column' ) ? 'property_selection ': '']"
       [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Selection (R)'"
       [data]="vProp.propertySelectionTypes" [(ngModel)]="vProp.propertySelection" [isRelatedSelection]="true" >
     </ng-multiselect-dropdown>


           </div> -->

            <!--Releated property Type-->
            <div class="item p-3 49" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&inEditMode) && parentEntity.type != 'Multi Record (MRV)'" >

              <ng-multiselect-dropdown
                *ngIf="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')  && (vProp.selectedMrv?.id == null || vProp.selectedMrv?.id == '')"
                [required]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')"
                [msId]="'vpr131'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Look Up (R)'"
                (onSelect)="lookUPChanges(vProp.selectedMrv.id)" (onDeselect)="lookUPChanges(vProp.selectedMrv.id)"
                [ngClass]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && (vProp.selectedMrv.id == null || vProp.selectedMrv.id == '') ? 'errorsShowMultiSelect':((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) ? 'column-view-multiselect': 'unset' "
                [data]="vProp.MrvLookup" [(ngModel)]="vProp.selectedMrv.id" [isRelatedSelection]="true"
                [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')">

              </ng-multiselect-dropdown>

              <ng-multiselect-dropdown
                *ngIf="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && (vProp.selectedMrv?.id != null && vProp.selectedMrv?.id != '')"
                [required]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan')"
                [msId]="'vpr132'+'_'+VTabIndex+'_'+itemIndex" [ngModelOptions]="{standalone: true}"
                [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Property Look Up (R)'"
                (onSelect)="lookUPChanges(vProp.selectedMrv.id)" (onDeselect)="lookUPChanges(vProp.selectedMrv.id)"
                [ngClass]="(vProp.propertySelection=='Look Up' || vProp.propertySelection=='Look Up or Scan') && (vProp.selectedMrv.id == null || vProp.selectedMrv.id == '') ? 'errorsShowMultiSelect':((parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ) ? 'column-view-multiselect': 'unset' "
                [data]="vProp.MrvLookup" [(ngModel)]="vProp.selectedMrv.id" [isRelatedSelection]="true"
                [disabled]="!inEditMode ? true : false">

              </ng-multiselect-dropdown>

              <span *ngIf="vProp.propertySelection !=='Look Up' "></span>
            </div>

            <div class="item 2334d23" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&!inEditMode) && parentEntity.type !=='Multi Record (MRV)'">
              <label class="centeraligh" style="white-space: nowrap !important;">
                {{this.mainLayout.replaceUnderScore(vProp?.selectedMrv?.name)}}</label>
            </div>
            <!--/Releated property Type-->
          <!--Look UP MRV-->

        <!--/Look UP MRV-->
            <!--Related Dependency-->
            <!-- <div *ngIf="((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true ) && inEditMode" class="item p-3">
              <div class="item p-3 p1" *ngIf="(vProp.property && vProp.property.type !=='Related' && vProp.property.type !=='Related (Multiselect)') && vProp?.relatedDependencyProperty && vProp?.relatedDependencyProperty?.length == 0">
                   </div>
              <div class="item p-3 p2 2" *ngIf="vProp.property && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)' && !checkRelatedDependencyValid() && vProp?.relatedDependencyProperty?.length !== 0 && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true )">
                </div>
                  <div class="item p-3 pname" style="border-right: none; padding: 0 !important;" *ngIf="vProp.property && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && parentEntity.type !=='Multi Record (MRV)'  && parentEntity.type !=='Single Record (SRV)' && checkRelatedDependencyValid() && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true )">
                               <select *ngIf="vProp.relatedDependencyProperty?.length > 0 && getRelatedDependency().length > 0 && vProp.category =='User Created'" [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="allowEditRelatedDependency" #relatedDependency="ngModel"
                   [(ngModel)]="vProp.relatedDependency" class="form-select select-enums"  [disabled]="vProp.propertySelection == 'Navigation Defined (Hide)'|| vProp.propertySelection ==='Navigation Defined (Display)' || editableq"
                   [ngStyle]="{'color': (vProp.relatedDependency == null || vProp.relatedDependency == 'null' || vProp.relatedDependency == '' || vProp.relatedDependency == undefined) ? '#acacac': '#555'}"
                   (change)="getDependencyProperty(vProp)">
                   <option  value=null>Related Dependency</option>
                   <option *ngFor="let l of getRelatedDependency()" [ngValue]="l.id !=null ? l.id : l.viewPropertyId">{{this.mainLayout.replaceUnderScore(l.displayName)}}</option>
                 </select>
             </div> -->

            <!-- for #2826 no need for MRV,MRV & SRV , SRV -->
           <!-- <div class="item p-3 testst" *ngIf="!(parentEntity.type == 'Multi Record (MRV)'   || parentEntity.type =='Single Record (SRV)') && (vProp.property.type =='Related' || vProp.property.type =='Related (Multiselect)') && ((this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)') ? vProp.category =='User Created' : true ) && vProp.relatedDependencyProperty?.length>0">
             <select *ngIf="vProp.relatedDependencyProperty?.length > 0 && getRelatedDependency().length > 0 && vProp.category =='User Created'" [disabled]="(vProp?.recordState != 'Active' && vProp?.recordState != 'Active (Incomplete)')" ngDefaultControl name="allowEditRelatedDependency" #relatedDependency="ngModel"
               [(ngModel)]="vProp.relatedDependency" (ngModelChange)="onSelectRelatedDependency()" class="form-select select-enums"  [disabled]="vProp.propertySelection == 'Navigation Defined (Hide)'|| vProp.propertySelection ==='Navigation Defined (Display)' || editableq"
               [ngStyle]="{'color': (vProp.relatedDependency == null || vProp.relatedDependency == 'null' || vProp.relatedDependency == '' || vProp.relatedDependency == undefined) ? '#acacac': '#555'}">
               <option  value=null>Related Dependency</option>
               <option *ngFor="let l of getRelatedDependency()" [ngValue]="l.id !=null ? l.id : l.viewPropertyId">{{this.mainLayout.replaceUnderScore(l.displayName)}}</option>
             </select>

           </div> -->
          <!-- </div>
      <div class="item p-3 122" *ngIf="(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)') && !inEditMode">
      <label class="centeraligh" >
        <span *ngIf="vProp.relatedDependencyName !== null">{{this.mainLayout.replaceUnderScore(vProp?.relatedDependencyName)}}</span>
      </label>
      </div>
      <div class="item p-3 232323" *ngIf="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type== 'Single Record (SRV)') && !inEditMode">
        <label class="centeraligh" >
          <span > {{getRelatedDependencyname()}}</span>
        </label>
        </div>
        <div class="item p-3" *ngIf="vProp.isStaticText && (parentEntity.layout=='Row' || parentEntity.layout == 'Grid')">

        </div> -->
      <!--/Related Dependency-->

      <!-- <div *ngIf="this.parentEntity['modelTableTypes'] != 'Standard' && this.parentEntity['modelTableTypes'] != 'Standard (Single Active)' && (parentEntity.type=='Multi Record (MRV)' || parentEntity.type== 'Single Record (SRV)') && ( vProp.category !='User Created'  ) && inEditMode" class="item p-3 tu777 2">
        <div style="border: none;" class="item p-3 p" >
          </div>
          </div> -->
        <!--/Dependency property-->
            <!--property pick list-->
            <!-- <div class="item " *ngIf="(parentEntity.type=='Create (CV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)') ">

                <label title="{{this.mainLayout.replaceUnderScore(vProp.pickListTable?.name)}}" class="centeraligh" style="white-space: nowrap !important;">
          {{this.mainLayout.replaceUnderScore(vProp.pickListTable?.name)}}
        </label>
            </div> -->
            <!--/property pick list-->
            <!--Hyperlink View-->
            <div class="item p-3 p12" *ngIf="(!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1 || vProp?.isStaticImage || vProp.displayName?.search('Static Text') != -1 || vProp?.isStaticText)&&(parentEntity.type != 'Create (CV)')) && parentEntity.type != 'Multi Record (MRV)'" >
                         <div *ngIf="vProp.property && (vProp.property.type=='Related' || vProp.property.type=='Related (Multiselect)')" style="height: 100%;">
                <div *ngIf=" vProp.id " style="height: 100%;">
                  <label class="centeraligh" >
                    <span style="font-size: small; cursor: pointer;" title="{{this.mainLayout.replaceUnderScore(vProp.relatedNavigationModelView?.name)}}">
                    {{this.mainLayout.replaceUnderScore(vProp.relatedNavigationModelView?.name)}}
              </span>
                 </label>
                                  </div>
                 <div *ngIf="parentEntity.type != 'Multi Record (MRV)' && !vProp.id ">
                  <!-- 3553 - Pick List entry cell standardization -->
                     <!-- <select ngDefaultControl name="relatedNavigationModelView_id_0" #relatedNavigationModelView_id="ngModel" [(ngModel)]="vProp.relatedNavigationModelView.id" (ngModelChange)="vProp.relatedNavigationModelView.id = $event" class="form-control select-enums" (change)="onChange_NavigationModelView_Related(vProp, $event)"
                    [ngStyle]="{'color': (vProp.relatedNavigationModelView?.id == null || vProp.relatedNavigationModelView?.id == 'null' || vProp.relatedNavigationModelView?.id == '' || vProp.relatedNavigationModelView?.id == undefined) ? '#acacac': '#555'}"
                    >
            <option disabled hidden value=''>Hyperlink View</option>
            <option disabled hidden value=null>Hyperlink View</option>
            <option value="null"></option>

            <option *ngFor="let l of vProp.hyperLinkViews" [value]="l.id">{{this.mainLayout.replaceUnderScore(l.name)}}</option>
          </select> -->

          <ng-multiselect-dropdown [msId]="'vpr153'+'_'+VTabIndex+'_'+itemIndex"
            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="singleSelectPlaceholderForHyperLink(vProp, 'Hyperlink View')" [isBlankRowShow]="isBlankRowShow"
            [(ngModel)]="vProp.relatedNavigationModelView.id" [ngModelOptions]="{standalone: true}"
            (ngModelChange)="onChange_NavigationModelView_Related(vProp, $event)"
            [data]="vProp.hyperLinkViews" [isRelatedSelection]="true">
          </ng-multiselect-dropdown>

                </div>
              </div>
              <div *ngIf="vProp.property && vProp.property.type !='Related' && vProp.property.type !='Related (Multiselect)'">
               </div>
            </div>
            <!--/Hyperlink View-->
            <!--master sort-->
            <!-- <div class="item p-3 " *ngIf="!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&(parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) )">
                <div *ngIf="(parentEntity.modelTable_id==vProp.selectedModelTableId || parentEntity.modelTable_id==vProp.relatedModelTable) && vProp.id  && !formViewShow"> -->
                  <!-- 3553 - Pick List entry cell standardization -->
                    <!-- <select ngDefaultControl name="masterSort" #masterSort="ngModel" [(ngModel)]="vProp.masterSort" class="form-control select-enums" (change)="onChange_MasterSort(vProp)" required="vProp.type==constantsModelView.ViewPropertyType_NonRelated_Self"
                        [disabled]="vProp.type== constantsModelView.ViewPropertyType_OneToOne || isVpropNumber(vProp.type) ||
           vProp.type == '' || parentEntity.layout==constantsModelView.Layout_Horizontal || parentEntity.layout==constantsModelView.Layout_Horizontal_Grid" [ngModelOptions]="{ standalone: true }"
           [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Master Sort is required for at least one record') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.masterSort == 'null' || vProp.masterSort == null || vProp.masterSort == '' || vProp.masterSort == undefined ) ? 'errorsShow':'' "

           [ngStyle]="{'color': (vProp.masterSort == null || vProp.masterSort == 'null' || vProp.masterSort == '' || vProp.masterSort == undefined) ? '#acacac': '#555'}">
            <option disabled hidden [ngValue]=null>Master Sort (R) </option>
            <option *ngFor="let l of lookupSortDirection" [ngValue]="l['Text']">{{this.mainLayout.replaceUnderScore(l['Text'])}}</option>
          </select> -->

          <!-- <ng-multiselect-dropdown [msId]="'vpr154'+'_'+VTabIndex+'_'+itemIndex"
            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Master Sort (R)'"
            [(ngModel)]="vProp.masterSort" [ngModelOptions]="{standalone: true}"
            (onSelect)="onChange_MasterSort(vProp)" (onDeSelect)="onChange_MasterSort(vProp)"
            [disabled]="(vProp.type== constantsModelView.ViewPropertyType_OneToOne || isVpropNumber(vProp.type) ||
            vProp.type == '' || parentEntity.layout==constantsModelView.Layout_Horizontal || (parentEntity.layout==constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? true : false"
            [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Master Sort is required for at least one record') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.masterSort == 'null' || vProp.masterSort == null || vProp.masterSort == '' || vProp.masterSort == undefined ) ? 'errorsShowMultiSelect':'' "
            [data]="lookupSortDirection" [isRelatedSelection]="true">
          </ng-multiselect-dropdown>

                </div>
                <div *ngIf="((parentEntity.modelTable_id==vProp.selectedModelTableId || parentEntity.modelTable_id==vProp.relatedTable) && !vProp.id) || formViewShow  "> -->
                  <!-- 3553 - Pick List entry cell standardization -->
                    <!-- <select ngDefaultControl name="masterSort" #masterSort="ngModel" [(ngModel)]="vProp.masterSort" class="form-control select-enums" (change)="onChange_MasterSort(vProp)" [ngModelOptions]="{ standalone: true }"
                    [disabled]="!inEditMode" [ngStyle]="{'color': (vProp.masterSort == null || vProp.masterSort == 'null' || vProp.masterSort == '' || vProp.masterSort == undefined) ? '#acacac': '#555'}" [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Master Sort is required for at least one record') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.masterSort == 'null' || vProp.masterSort == null || vProp.masterSort == '' || vProp.masterSort == undefined ) ? 'errorsShow':'' ">
            <option disabled hidden [value]=null>Master Sort (R) </option>
            <option *ngFor="let l of lookupSortDirection" [ngValue]="l['Text']">{{this.mainLayout.replaceUnderScore(l['Text'])}}</option>
          </select> -->
          <!-- <ng-multiselect-dropdown [msId]="'vpr16'+'_'+VTabIndex+'_'+itemIndex"
            [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Master Sort (R)'"
            [(ngModel)]="vProp.masterSort" [ngModelOptions]="{standalone: true}"
            (onSelect)="onChange_MasterSort(vProp)" (onDeSelect)="onChange_MasterSort(vProp)"
            [disabled]="(!inEditMode) ? true : false"
            [ngClass]="(error_msg != undefined ? (error_msg.indexOf('Master Sort is required for at least one record') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                    (vProp.masterSort == 'null' || vProp.masterSort == null || vProp.masterSort == '' || vProp.masterSort == undefined ) ? 'errorsShowMultiSelect':'' "
            [data]="lookupSortDirection" [isRelatedSelection]="true">
          </ng-multiselect-dropdown>

                </div>

            </div> -->
                        <!--/master sort-->
                        <!-- Related Record State(s) -->
            <div class="item p-3 max-select-height"*ngIf="(((formViewShow && (parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? !(parentEntity.table == null || parentEntity.table.length > 1) : true) && !(vProp.displayName?.search(constantsModelView.Blank_Space) != -1||vProp.displayName?.search(constantsModelView.Static_Image) != -1|| vProp.displayName?.search(constantsModelView.Static_Text) != -1))" >
             <!-- *ngIf="(parentEntity.type=='Single Record (SRV)' || parentEntity.type=='Create (CV) & Single Record (SRV)' || parentEntity.type=='Create (CV), Multi Record (MRV) & Single Record (SRV)')" -->
             <div  *ngIf="!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&((vProp.type =='Related (Multiselect)' || vProp?.property?.type == 'Related (Multiselect)' ) && vProp.id && parentEntity.type != 'Create (CV)')">
                <ng-multiselect-dropdown  class="unset" [msId]="'vpr17'+'_'+VTabIndex+'_'+itemIndex"      class="rr-state  vr-scroll"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" [placeholder]="'Select (R)'"  [ngModelOptions]="{standalone: true}"
            [ngStyle]="{'color':inEditMode ? '#4b809b' : 'red', 'pointer-events': !inEditMode ? 'none' : true ,'opacity': !inEditMode ? '0.8' : '1',
            'position': ((parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) || parentEntity.layout == constantsModelView.Layout_Horizontal_Grid_2)?'relative':'none' }"
            [data]="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') && (vProp.tier == 'Up' || vProp.tier == 'Down') ? relatedRecordStateForUpAndDownTable :relatedRecordStateForViewsTable" [(ngModel)]="vProp.relatedRecordStates"  [ngClass]="[(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || checkRedBorder(vProp,error_msg) || error_msg.indexOf('(Related Record State(s)) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
            (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] " [isRelatedSelection]="true"></ng-multiselect-dropdown>
            </div>
              <div *ngIf="!(vProp.displayName?.search('Blank Space') != -1||vProp.displayName?.search('Static Image') != -1|| vProp.displayName?.search('Static Text') != -1)&&((vProp.type =='Related (Multiselect)' || vProp?.property?.type == 'Related (Multiselect)' ) && !vProp.id)">
              <ng-container *ngIf="vProp.category =='User Created'">
                <ng-multiselect-dropdown  class="unset" [msId]="'vpr155'+'_'+VTabIndex+'_'+itemIndex" [disabled]="!inEditMode" [placeholder]="'Select (R)'" class="rr-state" [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [ngModelOptions]="{standalone: true}"
                [data]="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') && (vProp.tier == 'Up' || vProp.tier == 'Down') ? relatedRecordStateForUpAndDownTable :relatedRecordStateForViewsTable" [(ngModel)]="vProp.relatedRecordStates"
                  [ngClass]="[(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                  (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset']" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </ng-container>
              <ng-container *ngIf="vProp.category !='User Created'">
                <!-- <select class="rr-state"  [disabled]="!inEditMode" disabled [(ngModel)]="vProp.relatedRecordStates" class="form-control"
                  [ngClass]="(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                  (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'' ">
                  <option [selected]="true" value="Active">Active</option>
                </select> -->

                <ng-multiselect-dropdown [msId]="'vpr0188'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Select (R)'"
                  class="rr-state max-select-height" [settings]="constantsModelView.dropdownSettingsForRelatedRecordState"
                  [disabled]="true" [ngModelOptions]="{standalone: true}" [data]="(parentEntity.type=='Multi Record (MRV)' || parentEntity.type=='Single Record (SRV)') && (vProp.tier == 'Up' || vProp.tier == 'Down') ? relatedRecordStateForUpAndDownTable :relatedRecordStateForViewsTable" [(ngModel)]="vProp.relatedRecordStates"
                  [ngClass]="(error_msg != undefined ? (relatedRRErrorCheck(vProp?.displayName,error_msg,'(Related Record State(s)) is required') || error_msg.indexOf('(Related Record State(s)) is required') != -1 || checkRedBorder(vProp,error_msg) || error_msg.indexOf('Please fill the required values') != -1) : false ) &&
                                (vProp.relatedRecordStates == 'null' || vProp.relatedRecordStates == null || vProp.relatedRecordStates == '' || vProp.relatedRecordStates.length == 0 ) ? 'errorsShowMultiSelect':'' "
                  [isRelatedSelection]="true">
                </ng-multiselect-dropdown>

                </ng-container>

              </div>
              </div>
              <!-- /Related Record State(s) -->
            <!-- Record Displayed -->
            <div class="item p-3 max-select-height" *ngIf="(((formViewShow && (parentEntity.layout == constantsModelView.Layout_Horizontal_Grid || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design))) ? !(parentEntity.table == null || parentEntity.table.length > 1) : true) && !(vProp.displayName?.search(constantsModelView.Blank_Space) != -1||vProp.displayName?.search(constantsModelView.Static_Image) != -1|| vProp.displayName?.search(constantsModelView.Static_Text) != -1)&&(parentEntity.type==constantsModelView.ViewType_MultiRecord || parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord|| parentEntity.type == constantsModelView.ViewType_Printout || formViewShow))">

                <div *ngIf="(vProp.tier =='Down' || vProp.selectedModelTableRelationType ==constantsModelView.OneToMany || vProp.selectedModelTableRelationType ==constantsModelView.MathematicalOneToMany) && vProp.id && parentEntity.type=='Multi Record (MRV)'">
         <ng-multiselect-dropdown  class="unset" [msId]="'vpr156'+'_'+VTabIndex+'_'+itemIndex"
          (onSelect)="onSelect();selectRecordsDisplayed($event,'Select',vProp);" [disabled]="inEditMode|| !vProp.recordDisplayState" [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == [])  ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
          [settings]="constantsModelView.dropdownSettings" (onDeSelectAll)="onDeSelectAll($event)"  [ngModelOptions]="{standalone: true}" (onSelectAll)="onSelectAll($event)" (onDeSelectAll)="onDeSelectAll($event)" (onDeSelect)="OnItemDeSelect($event);selectRecordsDisplayed($event,'Select',vProp);"
          [data]="(vProp.dropDownValue == '3' ? RecordDisplayQualifierTypeForAll : (vProp.dropDownValue == '1') ? RecordDisplayQualifierTypeForLastCreatedActive : (vProp.dropDownValue == '4') ? RecordDisplayQualifierTypeForLastCreatedArchived :(vProp.dropDownValue == '5') ? RecordDisplayQualifierTypeForLastEditedActive : (vProp.dropDownValue == '6') ? RecordDisplayQualifierTypeForLastEditedArchived : RecordDisplayQualifierTypes())"
           [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)" [(ngModel)]="vProp.recordDisplayQualifier"  [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
          </div>
          <div *ngIf="(vProp.tier =='Down' || vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') && (parentEntity.type==constantsModelView.ViewType_CreateViewAndSingleRecord || parentEntity.type == 'Printout (PO)' || formViewShow) || (formViewShow && vProp?.propertyType == 'Down Table Properties' && vProp?.property?.id !== null)">
            <ng-multiselect-dropdown [msId]="'vpr141'+'_'" *ngIf="parentEntity.type == 'Printout (PO)'"
            (onSelect)="onSelect();selectRecordsDisplayed($event,'SelectSRV',vProp);" [disabled]="!inEditMode" [ngClass]="((error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == []))  ? 'errorsShowMultiSelect':'' "
            [settings]="constantsModelView.dropdownSettingsForRelatedTableV1"  [ngModelOptions]="{standalone: true}" (onDeSelect)="OnItemDeSelect($event);selectRecordsDisplayed($event,'DeselectSRV',vProp);"
            [data]="RecordDisplayQualifierTypeForSRV" [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)" [(ngModel)]="vProp.recordDisplayQualifier" [recordsDisplayedDropdown]="true" (onDeSelectAll)="onDeSelectAll($event)" (onSelectAll)="onSelectAll($event)"  [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>

           <ng-multiselect-dropdown  class="unset" [msId]="'vpr1New'+'_'+VTabIndex+'_'+itemIndex" *ngIf="parentEntity.type != 'Printout (PO)'"
             (onSelect)="onSelect()" [disabled]="!inEditMode" [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == [])  ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] " [(ngModel)]="vProp.recordDisplayQualifier"
             [settings]="constantsModelView.dropdownSettingsForRelatedTableV1"  [ngModelOptions]="{standalone: true}" (onSelectAll)="onSelectAll($event)" (onDeSelect)="OnItemDeSelect($event)"
             [data]="RecordDisplayQualifierTypeForSRV" [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)" [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
             </div>

                <div *ngIf="vProp.selectedModelTableRelationType =='One to Many' && !vProp.id ">
        <ng-multiselect-dropdown  class="unset" [msId]="'vpr19'+'_'+VTabIndex+'_'+itemIndex"
          (onSelect)="onSelect()" [disabled]="!inEditMode" (onDeSelect)="OnItemDeSelect($event)" [ngClass]="[(error_msg != undefined ? (error_msg.indexOf(' (Record(s) Displayed) is required') != -1 || error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.recordDisplayQualifier == null || vProp.recordDisplayQualifier == '' || vProp.recordDisplayQualifier == [])  ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset'] "
          [settings]="constantsModelView.dropdownSettingsForRelatedTableV1"  [ngModelOptions]="{standalone: true}" (onSelectAll)="onSelectAll($event)"  (onDeSelectAll)="onDeSelectAll($event)" [ngModel]="delimaterRemove(vProp.recordDisplayQualifier)"
            [(ngModel)]="vProp.recordDisplayQualifier" [placeholder]="'Record(s) Displayed (R)'" [isSelectAllHide]="true"></ng-multiselect-dropdown>
                </div>
            </div>
            <!-- /Record Displayed -->

            <!-- Record Presentation-->
            <div class="item p-3 gg"
              *ngIf="(parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || (parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))">
              <div *ngIf="(vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') && !formViewShow ">
                <ng-multiselect-dropdown [msId]="'vpr22'+'_'+VTabIndex+'_'+itemIndex"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Record Presentation'"
                  [(ngModel)]="vProp.recordPresentation" [ngModelOptions]="{standalone: true}"
                  [disabled]="(!inEditMode) ? true : false"
                  (ngModelChange)="setRecordPresentation(parentContainer,vProp.tierBaseId,vProp.recordPresentation)"
                  [data]="recordPresentations" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>
              </div>
              <span *ngIf="vProp.selectedModelTableRelationType !=='One to Many' "></span>
            </div>
            <!-- /Record Presentation-->

            <!--record model view-->
            <div class="item p-3 hh"
              *ngIf="(parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))) || (parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Row' || (parentEntity?.layout == constantsModelView.row_com && parentEntity.modelTableTypes == constantsModelView.sch_design)))">
              <div
                *ngIf="(vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M') && vProp.id ">
                <!-- 3553 - Pick List entry cell standardization -->
                <!-- <select ngDefaultControl name="parentContainer_navigationModelView_id" disabled="vProp.allowEdit" #parentContainer_navigationModelView_id="ngModel" [ngModel]="vProp.navigationModelView?.id" (change)="vProp.navigationModelView.id = parentContainer_navigationModelView_id.value;setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex)"
                                                class="form-select select-enums" [disabled]="!inEditMode"
                                                [ngStyle]="{'color': (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == 'null' || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined) ? '#acacac': '#555'}" [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||
                                                error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShow':'' ">

                                          <option disabled hidden value=null>Record View (R)</option>
                                          <option *ngFor="let l of vProp.relatedNavigationModelViews" [value]="l.id">{{this.mainLayout.replaceUnderScore(l.name)}}</option>
                      </select> -->

                <ng-multiselect-dropdown *ngIf="vProp?.relatedNavigationModelViews && vProp?.navigationModelView"
                  [msId]="'vpr23'+'_'+VTabIndex+'_'+itemIndex" [settings]="constantsModelView.dropdownSettingsForRelated"
                  [placeholder]="'Record View (R)'" [(ngModel)]="vProp.recordView" [ngModelOptions]="{standalone: true}"
                  [disabled]="((parentEntity.modelTable_id==vProp.selectedModelTableId) || (vProp.allowEdit) || (!inEditMode)) ? true : false"
                  (onSelect)="setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex)"
                  (onDeSelect)="setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex)"
                  [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||
                        error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShowMultiSelect':'' "
                  [data]="vProp.recordViewsData" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>

              </div>
              <div
                *ngIf="!vProp.id && (vProp.selectedModelTableRelationType =='One to Many' || vProp.selectedModelTableRelationType =='1 to M')">
                <!-- 3553 - Pick List entry cell standardization -->
                <!-- <select ngDefaultControl name="parentContainer_navigationModelView_id" #parentContainer_navigationModelView_id="ngModel" [ngModel]="vProp.navigationModelView?.id" (change)="vProp.navigationModelView.id = parentContainer_navigationModelView_id.value;setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex)"class="form-control select-enums" [ngStyle]="{'color': (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == 'null' || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined) ? '#acacac': '#555'}" [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShow':'' ">
                        <option disabled hidden *ngIf="vProp.navigationModelView?.id == ''" value=''>Record View (R)</option>
                        <option *ngIf="vProp.navigationModelView?.id == null"   value='null' disabled hidden>Record View (R)</option>
                        <option *ngIf="vProp.navigationModelView?.id == undefined"   value='undefined' disabled hidden>Record View (R)</option>

                        <option *ngFor="let l of vProp.relatedNavigationModelViews" [value]="l.id">{{this.mainLayout.replaceUnderScore(l.name)}}</option>
                      </select> -->

                <ng-multiselect-dropdown [msId]="'vpr24'+'_'+VTabIndex+'_'+itemIndex"
                  [settings]="constantsModelView.dropdownSettingsForRelated" [placeholder]="'Record View (R)'"
                  [ngModel]="vProp.recordView" [ngModelOptions]="{standalone: true}"
                  (ngModelChange)="setModelViewRecord(parentContainer,vProp.tierBaseId,vProp.navigationModelView?.id,itemIndex)"
                  [ngClass]="((error_msg != undefined ? (error_msg.indexOf('Record View is required') != -1 ||error_msg.indexOf('Please fill the required values') != -1) : false) &&  (vProp.navigationModelView?.id == null || vProp.navigationModelView?.id == '' || vProp.navigationModelView?.id == undefined ))  ? 'errorsShowMultiSelect':'' "
                  [data]="vProp.recordViewsData" [isRelatedSelection]="true">
                </ng-multiselect-dropdown>

              </div>

            </div>
            <!--/record model view-->
            <!-- Tier Base Id -->
            <div class="item p-3 iii" *ngIf="parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ">
                <span>{{this.mainLayout.replaceUnderScore(vProp.tierBaseId)}}</span>
            </div>
            <!-- complex Column Base ID -->
            <div class="item  p-325" *ngIf="parentEntity.type=='Multi Record (MRV)' && (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ">
                <span>{{this.mainLayout.replaceUnderScore(vProp.complexColumnBaseId)}}</span>
            </div>
            <!-- /complex Column Base ID -->
            <!-- /Tier Base Id -->
             <!-- Font Type (Display Name) -->
          <div class="item p-3 12a"
            *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
            <span *ngIf="vProp.displayName && vProp.displayName.trim()!=''&&vProp?.isShowDisplayName">
              <ng-multiselect-dropdown [msId]="'vpr144'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Type (Display Name) (R)'" (onSelect)="onChangeDropDownEmit()" (onDeSelect)="onChangeDropDownEmit()"
                [settings]="constantsModelView.dropdownSettingsForFontType" [disabled]="!inEditMode" class="rr-state"
                [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="pickListData[0]?.fontTypeDisplayName"
                [(ngModel)]="vProp.fontTypeDisplayName"
                [ngClass]="[(error_msg.indexOf('Please fill the required values') != -1) &&
                     (vProp.fontTypeDisplayName == 'null' || vProp.fontTypeDisplayName == null) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
                [isRelatedSelection]="true">
              </ng-multiselect-dropdown>
            </span>
          </div>

      <!-- Font Type (Value) -->
      <div class="item p-3 12b" *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
        <span *ngIf="vProp.type!='Text (Rich)'&&(isShowFontFormatValue || vProp?.isFontTypeValueShow)">
          <ng-multiselect-dropdown [msId]="'vprType146'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Type (Value) (R)'" (onSelect)="onChangeDropDownEmit()"
            [settings]="constantsModelView.dropdownSettingsForFontType" [disabled]="!inEditMode" class="rr-state"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="pickListData[0]?.fontTypeValue"
            [(ngModel)]="vProp.fontTypeValue" (onDeSelect)="onChangeDropDownEmit()"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                      (vProp.fontTypeValue == 'null' || vProp.fontTypeValue == null || vProp.fontTypeValue == '' || vProp.fontTypeValue.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
            [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Font Size (Display Name) -->
      <div class="item p-3 12c" *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)">
        <span *ngIf="vProp.displayName && vProp.displayName.trim()!=''&&vProp?.isShowDisplayName">
          <ng-multiselect-dropdown [msId]="'vpr148'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Size (Display Name) (R)'"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" class="rr-state" (onSelect)="onChangeDropDownEmit('fontSize')"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="pickListData[0]?.fontSizeDisplayName"
            [(ngModel)]="vProp.fontSizeDisplayName" (onDeSelect)="onChangeDropDownEmit('fontSize')"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1&&
                      (vProp.fontSizeDisplayName == 'null' || vProp.fontSizeDisplayName == null || vProp.fontSizeDisplayName == '' || vProp.fontSizeDisplayName.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
            [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Font Size (Value) -->
      <div class="item p-3 12d" *ngIf="(parentEntity.type == 'Printout (PO)' || printoutShow)" >
        <span *ngIf="vProp.type!='Text (Rich)' && isShowFontFormatValue" >
          <ng-multiselect-dropdown [msId]="'vpr150'+'_'+VTabIndex+'_'+itemIndex" [placeholder]="'Font Size (Value) (R)'"
            (onSelect)="onChangeDropDownEmit('fontValue')" (onDeSelect)="onChangeDropDownEmit('fontValue')"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode" class="rr-state"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="pickListData[0]?.fontSizeValue"
            [(ngModel)]="vProp.fontSizeValue"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                (vProp.fontSizeValue == 'null' || vProp.fontSizeValue == null || vProp.fontSizeValue == '' || vProp.fontSizeValue.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
            [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Font Color (Display Name) -->
      <div class="item p-3 12e">
        <span *ngIf="vProp.displayName && vProp.displayName.trim()!='' && vProp?.isShowDisplayName">
          <ng-multiselect-dropdown [msId]="'vprColorLabel2'+'_'+VTabIndex+'_'+itemIndex" (onSelect)="onChangeDropDownEmit()"
            [placeholder]="'Font Color (Display Name) (R)'" [settings]="constantsModelView.dropdownSettingsForRelatedRecordState"
            [disabled]="!inEditMode" class="rr-state" [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
            [data]="pickListData[0]?.fontColorDisplayName" [(ngModel)]="vProp.fontColorDisplayName" (onDeSelect)="onChangeDropDownEmit()"
            (ngModelChange)="fontFormatListModification(vProp)"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                  (vProp.fontColorDisplayName == constantsModelView.null || vProp.fontColorDisplayName == null || vProp.fontColorDisplayName == '' || vProp.fontColorDisplayName.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
            [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Font Color (Value) -->
      <div class="item p-3 13f">
        <span *ngIf="vProp?.showColorValue">
          <ng-multiselect-dropdown [msId]="'vprColorValue2'+'_'+VTabIndex+'_'+itemIndex"
            [placeholder]="'Font Color (Value) (R)'" class="rr-state" (onSelect)="onSelectFontColor(vProp.fontColorValue);onChangeDropDownEmit()"
            (onDeSelect)="onSelectFontColor(vProp.fontColorValue);onChangeDropDownEmit()"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode  ||(isReadOnlyEntryCellColor || vProp?.isReadOnlyFontColorValue)"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" [data]="vProp.fontColorValueList"
            [(ngModel)]="vProp.fontColorValue"
            [ngClass]="[ error_msg.indexOf('Please fill the required values') != -1  &&
                  (vProp.fontColorValue == constantsModelView.null || vProp.fontColorValue == null || vProp.fontColorValue == '' || vProp.fontColorValue.length == 0 ) ? 'errorsShowMultiSelect':'', (parentEntity.layout=='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) ? '' : 'unset',((parentEntity.layout==constantsModelView.Layout_Vertical || (parentEntity?.layout == constantsModelView.col_com && parentEntity.modelTableTypes == constantsModelView.sch_design)) && parentEntity.type == constantsModelView.ViewType_CreateViewAndMrvSrvRecord) ? 'max-select-height' :''] "
            [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Font Format (Display Name) -->
      <div class="item p-3 14g">
        <span *ngIf="vProp.displayName && vProp.displayName.trim()!=''&& vProp?.isShowDisplayName && vProp.displayName?.search('Blank Space') == -1">
          <ng-multiselect-dropdown [msId]="'vprFormat2_Label'+'_'+itemIndex"
            [component]="'view_Recursive'"
            [notExpand]="true"
            [placeholder]="constantsModelView.fontFormatPHForLabel" class="rr-state"
            [settings]="constantsModelView.dropdownSettingsForFontFormat" [disabled]="!inEditMode"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)"
            [data]="vProp.fontFormatDisplayNameList" [(ngModel)]="vProp.fontFormatDisplayName"
            (onSelect)="fontFormatListModification(vProp,vProp.fontFormatDisplayName,constantsModelView.fromLabel)"
            (onDeSelect)="fontFormatListModification(vProp,vProp.fontFormatDisplayName,constantsModelView.fromLabel)"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                  (vProp.fontFormatDisplayName == constantsModelView.null || vProp.fontFormatDisplayName == null ||vProp.fontFormatDisplayName.length == 0) ? 'errorsShowMultiSelect':''] " [isRelatedSelection]="true"
            (onDropDownClose)="onDropDownCloseEmit()">
          </ng-multiselect-dropdown>
        </span>
      </div>
      <!-- Font Format (Value) -->
      <div class="item p-3 15h">
        <span *ngIf="vProp.type!='Text (Rich)'&& isShowFontFormatValue">
          <ng-multiselect-dropdown  [msId]="'vprFormat2_Value'+'_'+itemIndex"
            [notExpand]="true"
            [component]="'view_Recursive'"
            [placeholder]="constantsModelView.fontFormatPH" class="rr-state"
            [settings]="constantsModelView.dropdownSettingsForFontFormat" [disabled]="!inEditMode"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" style="z-index:19;position:relative"
            [data]="vProp.fontFormatValueList" [(ngModel)]="vProp.fontFormatValue"
            (onSelect)="fontFormatListModification(vProp,vProp.fontFormatValue,constantsModelView.fromValue)"
            (onDeSelect)="fontFormatListModification(vProp,vProp.fontFormatValue,constantsModelView.fromValue)"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                  (vProp.fontFormatValue == constantsModelView.null || vProp.fontFormatValue == null || vProp.fontFormatValue.length == 0) ? 'errorsShowMultiSelect':'',] " [isRelatedSelection]="true" >
          </ng-multiselect-dropdown>
        </span>
      </div>


      <!-- Entry Cell Color -->
      <div class="item p-3 15i" *ngIf="(!printoutShow) && ((parentEntity.layout =='Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design)) || vProp?.isEntryCellShow)">
        <span *ngIf="(vProp.displayName?.search(constantsModelView.Static_Text) == -1 && !vProp?.staticText && !vProp?.isStaticImage && vProp.displayName?.search('Static Image') == -1 && vProp.displayName?.search('Blank Space') == -1) && vProp?.isEntryCellShow">
          <ng-multiselect-dropdown  [msId]="'vprEntryCellColor2'+'_'+VTabIndex+'_'+itemIndex"
            [placeholder]="'Entry Cell Color (R)'" class="rr-state"
            [settings]="constantsModelView.dropdownSettingsForRelatedRecordState" [disabled]="!inEditMode||isReadOnlyEntryCellColor"
            [ngModelOptions]="{standalone: true}" (click)="hey(vProp)" (onSelect)="onChangeDropDownEmit()" (onDeselect)="onChangeDropDownEmit()"
            [data]="vProp.entryCellColorList" [(ngModel)]="vProp.entryCellColor"
            [ngClass]="[error_msg.indexOf('Please fill the required values') != -1 &&
                  (vProp.entryCellColor == constantsModelView.null || vProp.entryCellColor == null) ? 'errorsShowMultiSelect':'',] " [isRelatedSelection]="true">
          </ng-multiselect-dropdown>
        </span>
      </div>

      <!-- Read Entry cell representation in column view for visualizing purpose-->
      <div class="item p-3 15i2"
              *ngIf="(parentEntity.layout == 'Column' || (parentEntity?.layout == constantsModelView.col_com && parentEntity['modelTableTypes'] == constantsModelView.sch_design))">
                <input type="text" [style]="vProp?.fontStylingForValue"  [value]="readOnlyEntryCellValue"
                  class="form-control 1212" autocomplete="off" placeholder="[preview]" disabled />
            </div>
        </ng-container>
        <!--/Read only mode-->

        <div class="clear"></div>
        <div *ngIf="loader">
              <!-- <app-loader></app-loader> -->
        </div>
    </form>
</div>
